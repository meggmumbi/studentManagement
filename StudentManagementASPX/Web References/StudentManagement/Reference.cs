//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace StudentManagementASPX.StudentManagement {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="StudentManagement_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement")]
    public partial class StudentManagement : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback FnRegistrationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateApplicantAccountRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnResetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetSendEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnChangeStudentPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnApplicantProfileRegistrationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnExistingStudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDeffermentLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDeffermentOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateWithdrawalLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateStudentBookingLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateStudentBookingOperationCompleted;
        
        private System.Threading.SendOrPostCallback InstitutionBookingLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRegistrationStudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUploadProfilePhotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintInvoiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmPaymentsStudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintDeffermentSummeryOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintInvoiceExemptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmPaymentStudentRegistrationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmPaymentsStudentBookingOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintInvoiceBookingOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnApplicantProfileRegistrationLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintInvoiceInstRegOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintWithdrawalSummeryOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInstitutionStudentRegistrationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InstitutionRegistartionHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback InstitutionExamBookingOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateExemptionLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateExemptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateWithdrawalOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertMultipleSurveysOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertBranchingResponsesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitSurveyOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateBRResponseQuestionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateRenewalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateReactivationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateRenewalLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateReactivationLineOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddDisabilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateTimetableOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback StudentTimetableOperationCompleted;
        
        private System.Threading.SendOrPostCallback InvoiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRegistrationSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnConfirmPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateExemptionQualificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExemptionLetterOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitExeptionApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditRegistrationApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnConfirmAttendanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnApplyJobOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddExemptionSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertBookingLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveExaminationPaperOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnConfirmExamCenterOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnConfirmBookingPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddVacancySharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback BookingInvoiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCaseManagementOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCenterRecollocateOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditstudentEMAILOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditstudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUploadProfilePhotoprofileOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDisplayPapersOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveExemptionPaperOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveQualificationPaperOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnConfirmPaymentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnsuggestPapersOperationCompleted;
        
        private System.Threading.SendOrPostCallback RenewalInvoiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddWithdrawalSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDefermentSharepointLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintReceiptBookinOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintReceiptExemptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetCustomerPictureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStudentsImagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResultSlipOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetExaminationResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetStudentProcessingHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetStudentProcessingHeaderRegOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetExamBookingEntriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetStudentUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeffermentInvoiceOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public StudentManagement() {
            this.Url = global::StudentManagementASPX.Properties.Settings.Default.StudentManagementASPX_StudentManagement_StudentManagement;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event FnRegistrationCompletedEventHandler FnRegistrationCompleted;
        
        /// <remarks/>
        public event FnCreateApplicantAccountRequestCompletedEventHandler FnCreateApplicantAccountRequestCompleted;
        
        /// <remarks/>
        public event FnResetPasswordCompletedEventHandler FnResetPasswordCompleted;
        
        /// <remarks/>
        public event ResetSendEmailCompletedEventHandler ResetSendEmailCompleted;
        
        /// <remarks/>
        public event FnChangeStudentPasswordCompletedEventHandler FnChangeStudentPasswordCompleted;
        
        /// <remarks/>
        public event FnApplicantProfileRegistrationCompletedEventHandler FnApplicantProfileRegistrationCompleted;
        
        /// <remarks/>
        public event FnExistingStudentCompletedEventHandler FnExistingStudentCompleted;
        
        /// <remarks/>
        public event CreateDeffermentLineCompletedEventHandler CreateDeffermentLineCompleted;
        
        /// <remarks/>
        public event CreateDeffermentCompletedEventHandler CreateDeffermentCompleted;
        
        /// <remarks/>
        public event CreateWithdrawalLineCompletedEventHandler CreateWithdrawalLineCompleted;
        
        /// <remarks/>
        public event CreateStudentBookingLineCompletedEventHandler CreateStudentBookingLineCompleted;
        
        /// <remarks/>
        public event CreateStudentBookingCompletedEventHandler CreateStudentBookingCompleted;
        
        /// <remarks/>
        public event InstitutionBookingLineCompletedEventHandler InstitutionBookingLineCompleted;
        
        /// <remarks/>
        public event FnRegistrationStudentCompletedEventHandler FnRegistrationStudentCompleted;
        
        /// <remarks/>
        public event FnUploadProfilePhotoCompletedEventHandler FnUploadProfilePhotoCompleted;
        
        /// <remarks/>
        public event PrintInvoiceCompletedEventHandler PrintInvoiceCompleted;
        
        /// <remarks/>
        public event ConfirmPaymentsStudentCompletedEventHandler ConfirmPaymentsStudentCompleted;
        
        /// <remarks/>
        public event PrintReceiptCompletedEventHandler PrintReceiptCompleted;
        
        /// <remarks/>
        public event PrintDeffermentSummeryCompletedEventHandler PrintDeffermentSummeryCompleted;
        
        /// <remarks/>
        public event PrintInvoiceExemptionCompletedEventHandler PrintInvoiceExemptionCompleted;
        
        /// <remarks/>
        public event ConfirmPaymentStudentRegistrationCompletedEventHandler ConfirmPaymentStudentRegistrationCompleted;
        
        /// <remarks/>
        public event ConfirmPaymentsStudentBookingCompletedEventHandler ConfirmPaymentsStudentBookingCompleted;
        
        /// <remarks/>
        public event PrintInvoiceBookingCompletedEventHandler PrintInvoiceBookingCompleted;
        
        /// <remarks/>
        public event FnApplicantProfileRegistrationLinesCompletedEventHandler FnApplicantProfileRegistrationLinesCompleted;
        
        /// <remarks/>
        public event PrintInvoiceInstRegCompletedEventHandler PrintInvoiceInstRegCompleted;
        
        /// <remarks/>
        public event PrintWithdrawalSummeryCompletedEventHandler PrintWithdrawalSummeryCompleted;
        
        /// <remarks/>
        public event FnInstitutionStudentRegistrationCompletedEventHandler FnInstitutionStudentRegistrationCompleted;
        
        /// <remarks/>
        public event InstitutionRegistartionHeaderCompletedEventHandler InstitutionRegistartionHeaderCompleted;
        
        /// <remarks/>
        public event InstitutionExamBookingCompletedEventHandler InstitutionExamBookingCompleted;
        
        /// <remarks/>
        public event CreateExemptionLineCompletedEventHandler CreateExemptionLineCompleted;
        
        /// <remarks/>
        public event CreateExemptionCompletedEventHandler CreateExemptionCompleted;
        
        /// <remarks/>
        public event CreateWithdrawalCompletedEventHandler CreateWithdrawalCompleted;
        
        /// <remarks/>
        public event FnInsertMultipleSurveysCompletedEventHandler FnInsertMultipleSurveysCompleted;
        
        /// <remarks/>
        public event FnInsertBranchingResponsesCompletedEventHandler FnInsertBranchingResponsesCompleted;
        
        /// <remarks/>
        public event FnSubmitSurveyCompletedEventHandler FnSubmitSurveyCompleted;
        
        /// <remarks/>
        public event FnCreateBRResponseQuestionsCompletedEventHandler FnCreateBRResponseQuestionsCompleted;
        
        /// <remarks/>
        public event CreateRenewalCompletedEventHandler CreateRenewalCompleted;
        
        /// <remarks/>
        public event CreateReactivationCompletedEventHandler CreateReactivationCompleted;
        
        /// <remarks/>
        public event CreateRenewalLineCompletedEventHandler CreateRenewalLineCompleted;
        
        /// <remarks/>
        public event CreateReactivationLineCompletedEventHandler CreateReactivationLineCompleted;
        
        /// <remarks/>
        public event FnAddDisabilityCompletedEventHandler FnAddDisabilityCompleted;
        
        /// <remarks/>
        public event GenerateTimetableCompletedEventHandler GenerateTimetableCompleted;
        
        /// <remarks/>
        public event FnSubmitApplicationCompletedEventHandler FnSubmitApplicationCompleted;
        
        /// <remarks/>
        public event StudentTimetableCompletedEventHandler StudentTimetableCompleted;
        
        /// <remarks/>
        public event InvoiceCompletedEventHandler InvoiceCompleted;
        
        /// <remarks/>
        public event AddRegistrationSharepointLinksCompletedEventHandler AddRegistrationSharepointLinksCompleted;
        
        /// <remarks/>
        public event FnConfirmPaymentCompletedEventHandler FnConfirmPaymentCompleted;
        
        /// <remarks/>
        public event CreateExemptionQualificationsCompletedEventHandler CreateExemptionQualificationsCompleted;
        
        /// <remarks/>
        public event ExemptionLetterCompletedEventHandler ExemptionLetterCompleted;
        
        /// <remarks/>
        public event FnSubmitExeptionApplicationCompletedEventHandler FnSubmitExeptionApplicationCompleted;
        
        /// <remarks/>
        public event EditRegistrationApplicationCompletedEventHandler EditRegistrationApplicationCompleted;
        
        /// <remarks/>
        public event FnConfirmAttendanceCompletedEventHandler FnConfirmAttendanceCompleted;
        
        /// <remarks/>
        public event FnApplyJobCompletedEventHandler FnApplyJobCompleted;
        
        /// <remarks/>
        public event AddExemptionSharepointLinksCompletedEventHandler AddExemptionSharepointLinksCompleted;
        
        /// <remarks/>
        public event FnInsertBookingLinesCompletedEventHandler FnInsertBookingLinesCompleted;
        
        /// <remarks/>
        public event RemoveExaminationPaperCompletedEventHandler RemoveExaminationPaperCompleted;
        
        /// <remarks/>
        public event FnConfirmExamCenterCompletedEventHandler FnConfirmExamCenterCompleted;
        
        /// <remarks/>
        public event FnConfirmBookingPaymentCompletedEventHandler FnConfirmBookingPaymentCompleted;
        
        /// <remarks/>
        public event AddVacancySharepointLinksCompletedEventHandler AddVacancySharepointLinksCompleted;
        
        /// <remarks/>
        public event BookingInvoiceCompletedEventHandler BookingInvoiceCompleted;
        
        /// <remarks/>
        public event FnCaseManagementCompletedEventHandler FnCaseManagementCompleted;
        
        /// <remarks/>
        public event FnCenterRecollocateCompletedEventHandler FnCenterRecollocateCompleted;
        
        /// <remarks/>
        public event FnEditProfileCompletedEventHandler FnEditProfileCompleted;
        
        /// <remarks/>
        public event FnEditstudentEMAILCompletedEventHandler FnEditstudentEMAILCompleted;
        
        /// <remarks/>
        public event FnEditstudentCompletedEventHandler FnEditstudentCompleted;
        
        /// <remarks/>
        public event FnUploadProfilePhotoprofileCompletedEventHandler FnUploadProfilePhotoprofileCompleted;
        
        /// <remarks/>
        public event FnDisplayPapersCompletedEventHandler FnDisplayPapersCompleted;
        
        /// <remarks/>
        public event RemoveExemptionPaperCompletedEventHandler RemoveExemptionPaperCompleted;
        
        /// <remarks/>
        public event RemoveQualificationPaperCompletedEventHandler RemoveQualificationPaperCompleted;
        
        /// <remarks/>
        public event FnConfirmPaymentsCompletedEventHandler FnConfirmPaymentsCompleted;
        
        /// <remarks/>
        public event FnsuggestPapersCompletedEventHandler FnsuggestPapersCompleted;
        
        /// <remarks/>
        public event RenewalInvoiceCompletedEventHandler RenewalInvoiceCompleted;
        
        /// <remarks/>
        public event AddWithdrawalSharepointLinksCompletedEventHandler AddWithdrawalSharepointLinksCompleted;
        
        /// <remarks/>
        public event AddDefermentSharepointLinksCompletedEventHandler AddDefermentSharepointLinksCompleted;
        
        /// <remarks/>
        public event PrintReceiptBookinCompletedEventHandler PrintReceiptBookinCompleted;
        
        /// <remarks/>
        public event PrintReceiptExemptionCompletedEventHandler PrintReceiptExemptionCompleted;
        
        /// <remarks/>
        public event FnGetCustomerPictureCompletedEventHandler FnGetCustomerPictureCompleted;
        
        /// <remarks/>
        public event GetStudentsImagesCompletedEventHandler GetStudentsImagesCompleted;
        
        /// <remarks/>
        public event ResultSlipCompletedEventHandler ResultSlipCompleted;
        
        /// <remarks/>
        public event FnGetExaminationResultsCompletedEventHandler FnGetExaminationResultsCompleted;
        
        /// <remarks/>
        public event FnGetStudentProcessingHeaderCompletedEventHandler FnGetStudentProcessingHeaderCompleted;
        
        /// <remarks/>
        public event FnGetStudentProcessingHeaderRegCompletedEventHandler FnGetStudentProcessingHeaderRegCompleted;
        
        /// <remarks/>
        public event FnGetExamBookingEntriesCompletedEventHandler FnGetExamBookingEntriesCompleted;
        
        /// <remarks/>
        public event FnGetStudentUserCompletedEventHandler FnGetStudentUserCompleted;
        
        /// <remarks/>
        public event DeffermentInvoiceCompletedEventHandler DeffermentInvoiceCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnRegistration", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnRegistration_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnRegistration(string firstname, string middlename, string lastname, string address, string postcode, string city, string phoneNumber, string email, string country) {
            object[] results = this.Invoke("FnRegistration", new object[] {
                        firstname,
                        middlename,
                        lastname,
                        address,
                        postcode,
                        city,
                        phoneNumber,
                        email,
                        country});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnRegistrationAsync(string firstname, string middlename, string lastname, string address, string postcode, string city, string phoneNumber, string email, string country) {
            this.FnRegistrationAsync(firstname, middlename, lastname, address, postcode, city, phoneNumber, email, country, null);
        }
        
        /// <remarks/>
        public void FnRegistrationAsync(string firstname, string middlename, string lastname, string address, string postcode, string city, string phoneNumber, string email, string country, object userState) {
            if ((this.FnRegistrationOperationCompleted == null)) {
                this.FnRegistrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRegistrationOperationCompleted);
            }
            this.InvokeAsync("FnRegistration", new object[] {
                        firstname,
                        middlename,
                        lastname,
                        address,
                        postcode,
                        city,
                        phoneNumber,
                        email,
                        country}, this.FnRegistrationOperationCompleted, userState);
        }
        
        private void OnFnRegistrationOperationCompleted(object arg) {
            if ((this.FnRegistrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRegistrationCompleted(this, new FnRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnCreateApplicantAccoun" +
            "tRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnCreateApplicantAccountRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreateApplicantAccountRequest(string emailaddress) {
            object[] results = this.Invoke("FnCreateApplicantAccountRequest", new object[] {
                        emailaddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateApplicantAccountRequestAsync(string emailaddress) {
            this.FnCreateApplicantAccountRequestAsync(emailaddress, null);
        }
        
        /// <remarks/>
        public void FnCreateApplicantAccountRequestAsync(string emailaddress, object userState) {
            if ((this.FnCreateApplicantAccountRequestOperationCompleted == null)) {
                this.FnCreateApplicantAccountRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateApplicantAccountRequestOperationCompleted);
            }
            this.InvokeAsync("FnCreateApplicantAccountRequest", new object[] {
                        emailaddress}, this.FnCreateApplicantAccountRequestOperationCompleted, userState);
        }
        
        private void OnFnCreateApplicantAccountRequestOperationCompleted(object arg) {
            if ((this.FnCreateApplicantAccountRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateApplicantAccountRequestCompleted(this, new FnCreateApplicantAccountRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnResetPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnResetPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnResetPassword(string emailaddress) {
            object[] results = this.Invoke("FnResetPassword", new object[] {
                        emailaddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnResetPasswordAsync(string emailaddress) {
            this.FnResetPasswordAsync(emailaddress, null);
        }
        
        /// <remarks/>
        public void FnResetPasswordAsync(string emailaddress, object userState) {
            if ((this.FnResetPasswordOperationCompleted == null)) {
                this.FnResetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnResetPasswordOperationCompleted);
            }
            this.InvokeAsync("FnResetPassword", new object[] {
                        emailaddress}, this.FnResetPasswordOperationCompleted, userState);
        }
        
        private void OnFnResetPasswordOperationCompleted(object arg) {
            if ((this.FnResetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnResetPasswordCompleted(this, new FnResetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:ResetSendEmail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="ResetSendEmail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ResetSendEmail(string emailaddress) {
            this.Invoke("ResetSendEmail", new object[] {
                        emailaddress});
        }
        
        /// <remarks/>
        public void ResetSendEmailAsync(string emailaddress) {
            this.ResetSendEmailAsync(emailaddress, null);
        }
        
        /// <remarks/>
        public void ResetSendEmailAsync(string emailaddress, object userState) {
            if ((this.ResetSendEmailOperationCompleted == null)) {
                this.ResetSendEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetSendEmailOperationCompleted);
            }
            this.InvokeAsync("ResetSendEmail", new object[] {
                        emailaddress}, this.ResetSendEmailOperationCompleted, userState);
        }
        
        private void OnResetSendEmailOperationCompleted(object arg) {
            if ((this.ResetSendEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetSendEmailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnChangeStudentPassword" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnChangeStudentPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnChangeStudentPassword(string emailaddress, string currentPassword, string newPassword, string confirmNewPassword) {
            object[] results = this.Invoke("FnChangeStudentPassword", new object[] {
                        emailaddress,
                        currentPassword,
                        newPassword,
                        confirmNewPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnChangeStudentPasswordAsync(string emailaddress, string currentPassword, string newPassword, string confirmNewPassword) {
            this.FnChangeStudentPasswordAsync(emailaddress, currentPassword, newPassword, confirmNewPassword, null);
        }
        
        /// <remarks/>
        public void FnChangeStudentPasswordAsync(string emailaddress, string currentPassword, string newPassword, string confirmNewPassword, object userState) {
            if ((this.FnChangeStudentPasswordOperationCompleted == null)) {
                this.FnChangeStudentPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnChangeStudentPasswordOperationCompleted);
            }
            this.InvokeAsync("FnChangeStudentPassword", new object[] {
                        emailaddress,
                        currentPassword,
                        newPassword,
                        confirmNewPassword}, this.FnChangeStudentPasswordOperationCompleted, userState);
        }
        
        private void OnFnChangeStudentPasswordOperationCompleted(object arg) {
            if ((this.FnChangeStudentPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnChangeStudentPasswordCompleted(this, new FnChangeStudentPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnApplicantProfileRegis" +
            "tration", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnApplicantProfileRegistration_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnApplicantProfileRegistration(
                    string applicantNumber, 
                    string surname, 
                    string firstname, 
                    string othernames, 
                    int gender, 
                    string idnumber, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofbirth, 
                    string county, 
                    string address, 
                    string postalcodes, 
                    string email, 
                    string city, 
                    string phoneNumber, 
                    string fileName, 
                    string project, 
                    string courseId, 
                    string countryId) {
            object[] results = this.Invoke("FnApplicantProfileRegistration", new object[] {
                        applicantNumber,
                        surname,
                        firstname,
                        othernames,
                        gender,
                        idnumber,
                        dateofbirth,
                        county,
                        address,
                        postalcodes,
                        email,
                        city,
                        phoneNumber,
                        fileName,
                        project,
                        courseId,
                        countryId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnApplicantProfileRegistrationAsync(
                    string applicantNumber, 
                    string surname, 
                    string firstname, 
                    string othernames, 
                    int gender, 
                    string idnumber, 
                    System.DateTime dateofbirth, 
                    string county, 
                    string address, 
                    string postalcodes, 
                    string email, 
                    string city, 
                    string phoneNumber, 
                    string fileName, 
                    string project, 
                    string courseId, 
                    string countryId) {
            this.FnApplicantProfileRegistrationAsync(applicantNumber, surname, firstname, othernames, gender, idnumber, dateofbirth, county, address, postalcodes, email, city, phoneNumber, fileName, project, courseId, countryId, null);
        }
        
        /// <remarks/>
        public void FnApplicantProfileRegistrationAsync(
                    string applicantNumber, 
                    string surname, 
                    string firstname, 
                    string othernames, 
                    int gender, 
                    string idnumber, 
                    System.DateTime dateofbirth, 
                    string county, 
                    string address, 
                    string postalcodes, 
                    string email, 
                    string city, 
                    string phoneNumber, 
                    string fileName, 
                    string project, 
                    string courseId, 
                    string countryId, 
                    object userState) {
            if ((this.FnApplicantProfileRegistrationOperationCompleted == null)) {
                this.FnApplicantProfileRegistrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnApplicantProfileRegistrationOperationCompleted);
            }
            this.InvokeAsync("FnApplicantProfileRegistration", new object[] {
                        applicantNumber,
                        surname,
                        firstname,
                        othernames,
                        gender,
                        idnumber,
                        dateofbirth,
                        county,
                        address,
                        postalcodes,
                        email,
                        city,
                        phoneNumber,
                        fileName,
                        project,
                        courseId,
                        countryId}, this.FnApplicantProfileRegistrationOperationCompleted, userState);
        }
        
        private void OnFnApplicantProfileRegistrationOperationCompleted(object arg) {
            if ((this.FnApplicantProfileRegistrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnApplicantProfileRegistrationCompleted(this, new FnApplicantProfileRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnExistingStudent", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnExistingStudent_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnExistingStudent(string applicantNumber, string examCode, string studentNo, string trainingInst, string project) {
            object[] results = this.Invoke("FnExistingStudent", new object[] {
                        applicantNumber,
                        examCode,
                        studentNo,
                        trainingInst,
                        project});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnExistingStudentAsync(string applicantNumber, string examCode, string studentNo, string trainingInst, string project) {
            this.FnExistingStudentAsync(applicantNumber, examCode, studentNo, trainingInst, project, null);
        }
        
        /// <remarks/>
        public void FnExistingStudentAsync(string applicantNumber, string examCode, string studentNo, string trainingInst, string project, object userState) {
            if ((this.FnExistingStudentOperationCompleted == null)) {
                this.FnExistingStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnExistingStudentOperationCompleted);
            }
            this.InvokeAsync("FnExistingStudent", new object[] {
                        applicantNumber,
                        examCode,
                        studentNo,
                        trainingInst,
                        project}, this.FnExistingStudentOperationCompleted, userState);
        }
        
        private void OnFnExistingStudentOperationCompleted(object arg) {
            if ((this.FnExistingStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnExistingStudentCompleted(this, new FnExistingStudentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:CreateDeffermentLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="CreateDeffermentLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateDeffermentLine(int bookingtype, string part, string section, string paper, string currency, string applicationNo) {
            object[] results = this.Invoke("CreateDeffermentLine", new object[] {
                        bookingtype,
                        part,
                        section,
                        paper,
                        currency,
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDeffermentLineAsync(int bookingtype, string part, string section, string paper, string currency, string applicationNo) {
            this.CreateDeffermentLineAsync(bookingtype, part, section, paper, currency, applicationNo, null);
        }
        
        /// <remarks/>
        public void CreateDeffermentLineAsync(int bookingtype, string part, string section, string paper, string currency, string applicationNo, object userState) {
            if ((this.CreateDeffermentLineOperationCompleted == null)) {
                this.CreateDeffermentLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDeffermentLineOperationCompleted);
            }
            this.InvokeAsync("CreateDeffermentLine", new object[] {
                        bookingtype,
                        part,
                        section,
                        paper,
                        currency,
                        applicationNo}, this.CreateDeffermentLineOperationCompleted, userState);
        }
        
        private void OnCreateDeffermentLineOperationCompleted(object arg) {
            if ((this.CreateDeffermentLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDeffermentLineCompleted(this, new CreateDeffermentLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:CreateDefferment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="CreateDefferment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateDefferment(string applicationNo, string studentNo, string regNo, string withdrawalReason, string examCycle, string preferedExamCenter) {
            object[] results = this.Invoke("CreateDefferment", new object[] {
                        applicationNo,
                        studentNo,
                        regNo,
                        withdrawalReason,
                        examCycle,
                        preferedExamCenter});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDeffermentAsync(string applicationNo, string studentNo, string regNo, string withdrawalReason, string examCycle, string preferedExamCenter) {
            this.CreateDeffermentAsync(applicationNo, studentNo, regNo, withdrawalReason, examCycle, preferedExamCenter, null);
        }
        
        /// <remarks/>
        public void CreateDeffermentAsync(string applicationNo, string studentNo, string regNo, string withdrawalReason, string examCycle, string preferedExamCenter, object userState) {
            if ((this.CreateDeffermentOperationCompleted == null)) {
                this.CreateDeffermentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDeffermentOperationCompleted);
            }
            this.InvokeAsync("CreateDefferment", new object[] {
                        applicationNo,
                        studentNo,
                        regNo,
                        withdrawalReason,
                        examCycle,
                        preferedExamCenter}, this.CreateDeffermentOperationCompleted, userState);
        }
        
        private void OnCreateDeffermentOperationCompleted(object arg) {
            if ((this.CreateDeffermentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDeffermentCompleted(this, new CreateDeffermentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:CreateWithdrawalLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="CreateWithdrawalLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateWithdrawalLine(int bookingtype, string part, string section, string paper, string currency, string applicationNo) {
            object[] results = this.Invoke("CreateWithdrawalLine", new object[] {
                        bookingtype,
                        part,
                        section,
                        paper,
                        currency,
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateWithdrawalLineAsync(int bookingtype, string part, string section, string paper, string currency, string applicationNo) {
            this.CreateWithdrawalLineAsync(bookingtype, part, section, paper, currency, applicationNo, null);
        }
        
        /// <remarks/>
        public void CreateWithdrawalLineAsync(int bookingtype, string part, string section, string paper, string currency, string applicationNo, object userState) {
            if ((this.CreateWithdrawalLineOperationCompleted == null)) {
                this.CreateWithdrawalLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateWithdrawalLineOperationCompleted);
            }
            this.InvokeAsync("CreateWithdrawalLine", new object[] {
                        bookingtype,
                        part,
                        section,
                        paper,
                        currency,
                        applicationNo}, this.CreateWithdrawalLineOperationCompleted, userState);
        }
        
        private void OnCreateWithdrawalLineOperationCompleted(object arg) {
            if ((this.CreateWithdrawalLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateWithdrawalLineCompleted(this, new CreateWithdrawalLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:CreateStudentBookingLin" +
            "e", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="CreateStudentBookingLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateStudentBookingLine(int bookingtype, string part, string section, string paper, string currency, string applicationNo) {
            object[] results = this.Invoke("CreateStudentBookingLine", new object[] {
                        bookingtype,
                        part,
                        section,
                        paper,
                        currency,
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateStudentBookingLineAsync(int bookingtype, string part, string section, string paper, string currency, string applicationNo) {
            this.CreateStudentBookingLineAsync(bookingtype, part, section, paper, currency, applicationNo, null);
        }
        
        /// <remarks/>
        public void CreateStudentBookingLineAsync(int bookingtype, string part, string section, string paper, string currency, string applicationNo, object userState) {
            if ((this.CreateStudentBookingLineOperationCompleted == null)) {
                this.CreateStudentBookingLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateStudentBookingLineOperationCompleted);
            }
            this.InvokeAsync("CreateStudentBookingLine", new object[] {
                        bookingtype,
                        part,
                        section,
                        paper,
                        currency,
                        applicationNo}, this.CreateStudentBookingLineOperationCompleted, userState);
        }
        
        private void OnCreateStudentBookingLineOperationCompleted(object arg) {
            if ((this.CreateStudentBookingLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateStudentBookingLineCompleted(this, new CreateStudentBookingLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:CreateStudentBooking", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="CreateStudentBooking_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateStudentBooking(string applicationNo, string studentNo, string regNo, string examCenters, string examCycle, string currency) {
            object[] results = this.Invoke("CreateStudentBooking", new object[] {
                        applicationNo,
                        studentNo,
                        regNo,
                        examCenters,
                        examCycle,
                        currency});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateStudentBookingAsync(string applicationNo, string studentNo, string regNo, string examCenters, string examCycle, string currency) {
            this.CreateStudentBookingAsync(applicationNo, studentNo, regNo, examCenters, examCycle, currency, null);
        }
        
        /// <remarks/>
        public void CreateStudentBookingAsync(string applicationNo, string studentNo, string regNo, string examCenters, string examCycle, string currency, object userState) {
            if ((this.CreateStudentBookingOperationCompleted == null)) {
                this.CreateStudentBookingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateStudentBookingOperationCompleted);
            }
            this.InvokeAsync("CreateStudentBooking", new object[] {
                        applicationNo,
                        studentNo,
                        regNo,
                        examCenters,
                        examCycle,
                        currency}, this.CreateStudentBookingOperationCompleted, userState);
        }
        
        private void OnCreateStudentBookingOperationCompleted(object arg) {
            if ((this.CreateStudentBookingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateStudentBookingCompleted(this, new CreateStudentBookingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:InstitutionBookingLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="InstitutionBookingLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InstitutionBookingLine(int bookingtype, string part, string section, string paper, string project, string applicationNo, string registrationNo) {
            object[] results = this.Invoke("InstitutionBookingLine", new object[] {
                        bookingtype,
                        part,
                        section,
                        paper,
                        project,
                        applicationNo,
                        registrationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InstitutionBookingLineAsync(int bookingtype, string part, string section, string paper, string project, string applicationNo, string registrationNo) {
            this.InstitutionBookingLineAsync(bookingtype, part, section, paper, project, applicationNo, registrationNo, null);
        }
        
        /// <remarks/>
        public void InstitutionBookingLineAsync(int bookingtype, string part, string section, string paper, string project, string applicationNo, string registrationNo, object userState) {
            if ((this.InstitutionBookingLineOperationCompleted == null)) {
                this.InstitutionBookingLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInstitutionBookingLineOperationCompleted);
            }
            this.InvokeAsync("InstitutionBookingLine", new object[] {
                        bookingtype,
                        part,
                        section,
                        paper,
                        project,
                        applicationNo,
                        registrationNo}, this.InstitutionBookingLineOperationCompleted, userState);
        }
        
        private void OnInstitutionBookingLineOperationCompleted(object arg) {
            if ((this.InstitutionBookingLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InstitutionBookingLineCompleted(this, new InstitutionBookingLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnRegistrationStudent", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnRegistrationStudent_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnRegistrationStudent(string firstname, string middlename, string lastname, string phoneNumber, string email, string idNumber) {
            object[] results = this.Invoke("FnRegistrationStudent", new object[] {
                        firstname,
                        middlename,
                        lastname,
                        phoneNumber,
                        email,
                        idNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnRegistrationStudentAsync(string firstname, string middlename, string lastname, string phoneNumber, string email, string idNumber) {
            this.FnRegistrationStudentAsync(firstname, middlename, lastname, phoneNumber, email, idNumber, null);
        }
        
        /// <remarks/>
        public void FnRegistrationStudentAsync(string firstname, string middlename, string lastname, string phoneNumber, string email, string idNumber, object userState) {
            if ((this.FnRegistrationStudentOperationCompleted == null)) {
                this.FnRegistrationStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRegistrationStudentOperationCompleted);
            }
            this.InvokeAsync("FnRegistrationStudent", new object[] {
                        firstname,
                        middlename,
                        lastname,
                        phoneNumber,
                        email,
                        idNumber}, this.FnRegistrationStudentOperationCompleted, userState);
        }
        
        private void OnFnRegistrationStudentOperationCompleted(object arg) {
            if ((this.FnRegistrationStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRegistrationStudentCompleted(this, new FnRegistrationStudentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnUploadProfilePhoto", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnUploadProfilePhoto_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUploadProfilePhoto(string studentNo) {
            object[] results = this.Invoke("FnUploadProfilePhoto", new object[] {
                        studentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUploadProfilePhotoAsync(string studentNo) {
            this.FnUploadProfilePhotoAsync(studentNo, null);
        }
        
        /// <remarks/>
        public void FnUploadProfilePhotoAsync(string studentNo, object userState) {
            if ((this.FnUploadProfilePhotoOperationCompleted == null)) {
                this.FnUploadProfilePhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUploadProfilePhotoOperationCompleted);
            }
            this.InvokeAsync("FnUploadProfilePhoto", new object[] {
                        studentNo}, this.FnUploadProfilePhotoOperationCompleted, userState);
        }
        
        private void OnFnUploadProfilePhotoOperationCompleted(object arg) {
            if ((this.FnUploadProfilePhotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUploadProfilePhotoCompleted(this, new FnUploadProfilePhotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:PrintInvoice", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="PrintInvoice_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PrintInvoice(string studentNoFilter, string invoicenumber) {
            object[] results = this.Invoke("PrintInvoice", new object[] {
                        studentNoFilter,
                        invoicenumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PrintInvoiceAsync(string studentNoFilter, string invoicenumber) {
            this.PrintInvoiceAsync(studentNoFilter, invoicenumber, null);
        }
        
        /// <remarks/>
        public void PrintInvoiceAsync(string studentNoFilter, string invoicenumber, object userState) {
            if ((this.PrintInvoiceOperationCompleted == null)) {
                this.PrintInvoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintInvoiceOperationCompleted);
            }
            this.InvokeAsync("PrintInvoice", new object[] {
                        studentNoFilter,
                        invoicenumber}, this.PrintInvoiceOperationCompleted, userState);
        }
        
        private void OnPrintInvoiceOperationCompleted(object arg) {
            if ((this.PrintInvoiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintInvoiceCompleted(this, new PrintInvoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:ConfirmPaymentsStudent", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="ConfirmPaymentsStudent_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ConfirmPaymentsStudent(string applicationNo, bool paymentDocument, string paymentRef, string studentNo, string mode) {
            object[] results = this.Invoke("ConfirmPaymentsStudent", new object[] {
                        applicationNo,
                        paymentDocument,
                        paymentRef,
                        studentNo,
                        mode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmPaymentsStudentAsync(string applicationNo, bool paymentDocument, string paymentRef, string studentNo, string mode) {
            this.ConfirmPaymentsStudentAsync(applicationNo, paymentDocument, paymentRef, studentNo, mode, null);
        }
        
        /// <remarks/>
        public void ConfirmPaymentsStudentAsync(string applicationNo, bool paymentDocument, string paymentRef, string studentNo, string mode, object userState) {
            if ((this.ConfirmPaymentsStudentOperationCompleted == null)) {
                this.ConfirmPaymentsStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmPaymentsStudentOperationCompleted);
            }
            this.InvokeAsync("ConfirmPaymentsStudent", new object[] {
                        applicationNo,
                        paymentDocument,
                        paymentRef,
                        studentNo,
                        mode}, this.ConfirmPaymentsStudentOperationCompleted, userState);
        }
        
        private void OnConfirmPaymentsStudentOperationCompleted(object arg) {
            if ((this.ConfirmPaymentsStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmPaymentsStudentCompleted(this, new ConfirmPaymentsStudentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:PrintReceipt", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="PrintReceipt_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PrintReceipt(string receiptNoFilter) {
            object[] results = this.Invoke("PrintReceipt", new object[] {
                        receiptNoFilter});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PrintReceiptAsync(string receiptNoFilter) {
            this.PrintReceiptAsync(receiptNoFilter, null);
        }
        
        /// <remarks/>
        public void PrintReceiptAsync(string receiptNoFilter, object userState) {
            if ((this.PrintReceiptOperationCompleted == null)) {
                this.PrintReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintReceiptOperationCompleted);
            }
            this.InvokeAsync("PrintReceipt", new object[] {
                        receiptNoFilter}, this.PrintReceiptOperationCompleted, userState);
        }
        
        private void OnPrintReceiptOperationCompleted(object arg) {
            if ((this.PrintReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintReceiptCompleted(this, new PrintReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:PrintDeffermentSummery", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="PrintDeffermentSummery_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PrintDeffermentSummery(string applicationNo) {
            object[] results = this.Invoke("PrintDeffermentSummery", new object[] {
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PrintDeffermentSummeryAsync(string applicationNo) {
            this.PrintDeffermentSummeryAsync(applicationNo, null);
        }
        
        /// <remarks/>
        public void PrintDeffermentSummeryAsync(string applicationNo, object userState) {
            if ((this.PrintDeffermentSummeryOperationCompleted == null)) {
                this.PrintDeffermentSummeryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintDeffermentSummeryOperationCompleted);
            }
            this.InvokeAsync("PrintDeffermentSummery", new object[] {
                        applicationNo}, this.PrintDeffermentSummeryOperationCompleted, userState);
        }
        
        private void OnPrintDeffermentSummeryOperationCompleted(object arg) {
            if ((this.PrintDeffermentSummeryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintDeffermentSummeryCompleted(this, new PrintDeffermentSummeryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:PrintInvoiceExemption", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="PrintInvoiceExemption_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PrintInvoiceExemption(string studentNoFilter, string invoiceNo) {
            object[] results = this.Invoke("PrintInvoiceExemption", new object[] {
                        studentNoFilter,
                        invoiceNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PrintInvoiceExemptionAsync(string studentNoFilter, string invoiceNo) {
            this.PrintInvoiceExemptionAsync(studentNoFilter, invoiceNo, null);
        }
        
        /// <remarks/>
        public void PrintInvoiceExemptionAsync(string studentNoFilter, string invoiceNo, object userState) {
            if ((this.PrintInvoiceExemptionOperationCompleted == null)) {
                this.PrintInvoiceExemptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintInvoiceExemptionOperationCompleted);
            }
            this.InvokeAsync("PrintInvoiceExemption", new object[] {
                        studentNoFilter,
                        invoiceNo}, this.PrintInvoiceExemptionOperationCompleted, userState);
        }
        
        private void OnPrintInvoiceExemptionOperationCompleted(object arg) {
            if ((this.PrintInvoiceExemptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintInvoiceExemptionCompleted(this, new PrintInvoiceExemptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:ConfirmPaymentStudentRe" +
            "gistration", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="ConfirmPaymentStudentRegistration_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ConfirmPaymentStudentRegistration(string applicationNo, bool paymentDocument, string paymentRef, string studentNo, string mode) {
            object[] results = this.Invoke("ConfirmPaymentStudentRegistration", new object[] {
                        applicationNo,
                        paymentDocument,
                        paymentRef,
                        studentNo,
                        mode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmPaymentStudentRegistrationAsync(string applicationNo, bool paymentDocument, string paymentRef, string studentNo, string mode) {
            this.ConfirmPaymentStudentRegistrationAsync(applicationNo, paymentDocument, paymentRef, studentNo, mode, null);
        }
        
        /// <remarks/>
        public void ConfirmPaymentStudentRegistrationAsync(string applicationNo, bool paymentDocument, string paymentRef, string studentNo, string mode, object userState) {
            if ((this.ConfirmPaymentStudentRegistrationOperationCompleted == null)) {
                this.ConfirmPaymentStudentRegistrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmPaymentStudentRegistrationOperationCompleted);
            }
            this.InvokeAsync("ConfirmPaymentStudentRegistration", new object[] {
                        applicationNo,
                        paymentDocument,
                        paymentRef,
                        studentNo,
                        mode}, this.ConfirmPaymentStudentRegistrationOperationCompleted, userState);
        }
        
        private void OnConfirmPaymentStudentRegistrationOperationCompleted(object arg) {
            if ((this.ConfirmPaymentStudentRegistrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmPaymentStudentRegistrationCompleted(this, new ConfirmPaymentStudentRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:ConfirmPaymentsStudentB" +
            "ooking", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="ConfirmPaymentsStudentBooking_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ConfirmPaymentsStudentBooking(string applicationNo, bool paymentDocument, string paymentRef, string studentNo, string mode) {
            object[] results = this.Invoke("ConfirmPaymentsStudentBooking", new object[] {
                        applicationNo,
                        paymentDocument,
                        paymentRef,
                        studentNo,
                        mode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmPaymentsStudentBookingAsync(string applicationNo, bool paymentDocument, string paymentRef, string studentNo, string mode) {
            this.ConfirmPaymentsStudentBookingAsync(applicationNo, paymentDocument, paymentRef, studentNo, mode, null);
        }
        
        /// <remarks/>
        public void ConfirmPaymentsStudentBookingAsync(string applicationNo, bool paymentDocument, string paymentRef, string studentNo, string mode, object userState) {
            if ((this.ConfirmPaymentsStudentBookingOperationCompleted == null)) {
                this.ConfirmPaymentsStudentBookingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmPaymentsStudentBookingOperationCompleted);
            }
            this.InvokeAsync("ConfirmPaymentsStudentBooking", new object[] {
                        applicationNo,
                        paymentDocument,
                        paymentRef,
                        studentNo,
                        mode}, this.ConfirmPaymentsStudentBookingOperationCompleted, userState);
        }
        
        private void OnConfirmPaymentsStudentBookingOperationCompleted(object arg) {
            if ((this.ConfirmPaymentsStudentBookingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmPaymentsStudentBookingCompleted(this, new ConfirmPaymentsStudentBookingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:PrintInvoiceBooking", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="PrintInvoiceBooking_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PrintInvoiceBooking(string invoicenumber, string studentNo) {
            object[] results = this.Invoke("PrintInvoiceBooking", new object[] {
                        invoicenumber,
                        studentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PrintInvoiceBookingAsync(string invoicenumber, string studentNo) {
            this.PrintInvoiceBookingAsync(invoicenumber, studentNo, null);
        }
        
        /// <remarks/>
        public void PrintInvoiceBookingAsync(string invoicenumber, string studentNo, object userState) {
            if ((this.PrintInvoiceBookingOperationCompleted == null)) {
                this.PrintInvoiceBookingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintInvoiceBookingOperationCompleted);
            }
            this.InvokeAsync("PrintInvoiceBooking", new object[] {
                        invoicenumber,
                        studentNo}, this.PrintInvoiceBookingOperationCompleted, userState);
        }
        
        private void OnPrintInvoiceBookingOperationCompleted(object arg) {
            if ((this.PrintInvoiceBookingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintInvoiceBookingCompleted(this, new PrintInvoiceBookingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnApplicantProfileRegis" +
            "trationLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnApplicantProfileRegistrationLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnApplicantProfileRegistrationLines(string applicantNumber, string isdisable, string examination, string highestAcademicQualification, string information, int kinRelationship, string kinname, string kinemail, string kinphone, string trainingInst) {
            object[] results = this.Invoke("FnApplicantProfileRegistrationLines", new object[] {
                        applicantNumber,
                        isdisable,
                        examination,
                        highestAcademicQualification,
                        information,
                        kinRelationship,
                        kinname,
                        kinemail,
                        kinphone,
                        trainingInst});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnApplicantProfileRegistrationLinesAsync(string applicantNumber, string isdisable, string examination, string highestAcademicQualification, string information, int kinRelationship, string kinname, string kinemail, string kinphone, string trainingInst) {
            this.FnApplicantProfileRegistrationLinesAsync(applicantNumber, isdisable, examination, highestAcademicQualification, information, kinRelationship, kinname, kinemail, kinphone, trainingInst, null);
        }
        
        /// <remarks/>
        public void FnApplicantProfileRegistrationLinesAsync(string applicantNumber, string isdisable, string examination, string highestAcademicQualification, string information, int kinRelationship, string kinname, string kinemail, string kinphone, string trainingInst, object userState) {
            if ((this.FnApplicantProfileRegistrationLinesOperationCompleted == null)) {
                this.FnApplicantProfileRegistrationLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnApplicantProfileRegistrationLinesOperationCompleted);
            }
            this.InvokeAsync("FnApplicantProfileRegistrationLines", new object[] {
                        applicantNumber,
                        isdisable,
                        examination,
                        highestAcademicQualification,
                        information,
                        kinRelationship,
                        kinname,
                        kinemail,
                        kinphone,
                        trainingInst}, this.FnApplicantProfileRegistrationLinesOperationCompleted, userState);
        }
        
        private void OnFnApplicantProfileRegistrationLinesOperationCompleted(object arg) {
            if ((this.FnApplicantProfileRegistrationLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnApplicantProfileRegistrationLinesCompleted(this, new FnApplicantProfileRegistrationLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:PrintInvoiceInstReg", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="PrintInvoiceInstReg_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PrintInvoiceInstReg(string invoicenumber, string custNo) {
            object[] results = this.Invoke("PrintInvoiceInstReg", new object[] {
                        invoicenumber,
                        custNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PrintInvoiceInstRegAsync(string invoicenumber, string custNo) {
            this.PrintInvoiceInstRegAsync(invoicenumber, custNo, null);
        }
        
        /// <remarks/>
        public void PrintInvoiceInstRegAsync(string invoicenumber, string custNo, object userState) {
            if ((this.PrintInvoiceInstRegOperationCompleted == null)) {
                this.PrintInvoiceInstRegOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintInvoiceInstRegOperationCompleted);
            }
            this.InvokeAsync("PrintInvoiceInstReg", new object[] {
                        invoicenumber,
                        custNo}, this.PrintInvoiceInstRegOperationCompleted, userState);
        }
        
        private void OnPrintInvoiceInstRegOperationCompleted(object arg) {
            if ((this.PrintInvoiceInstRegCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintInvoiceInstRegCompleted(this, new PrintInvoiceInstRegCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:PrintWithdrawalSummery", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="PrintWithdrawalSummery_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PrintWithdrawalSummery(string applicationNo) {
            object[] results = this.Invoke("PrintWithdrawalSummery", new object[] {
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PrintWithdrawalSummeryAsync(string applicationNo) {
            this.PrintWithdrawalSummeryAsync(applicationNo, null);
        }
        
        /// <remarks/>
        public void PrintWithdrawalSummeryAsync(string applicationNo, object userState) {
            if ((this.PrintWithdrawalSummeryOperationCompleted == null)) {
                this.PrintWithdrawalSummeryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintWithdrawalSummeryOperationCompleted);
            }
            this.InvokeAsync("PrintWithdrawalSummery", new object[] {
                        applicationNo}, this.PrintWithdrawalSummeryOperationCompleted, userState);
        }
        
        private void OnPrintWithdrawalSummeryOperationCompleted(object arg) {
            if ((this.PrintWithdrawalSummeryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintWithdrawalSummeryCompleted(this, new PrintWithdrawalSummeryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnInstitutionStudentReg" +
            "istration", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnInstitutionStudentRegistration_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInstitutionStudentRegistration(
                    string applicantNumber, 
                    string surname, 
                    string firstname, 
                    string othernames, 
                    int gender, 
                    string idnumber, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofbirth, 
                    string county, 
                    string address, 
                    string isdisable, 
                    string postalcodes, 
                    string email, 
                    string city, 
                    string examcenters, 
                    string examination, 
                    string phoneNumber, 
                    string highestAcademicQualification, 
                    string examCycle, 
                    string currency) {
            object[] results = this.Invoke("FnInstitutionStudentRegistration", new object[] {
                        applicantNumber,
                        surname,
                        firstname,
                        othernames,
                        gender,
                        idnumber,
                        dateofbirth,
                        county,
                        address,
                        isdisable,
                        postalcodes,
                        email,
                        city,
                        examcenters,
                        examination,
                        phoneNumber,
                        highestAcademicQualification,
                        examCycle,
                        currency});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInstitutionStudentRegistrationAsync(
                    string applicantNumber, 
                    string surname, 
                    string firstname, 
                    string othernames, 
                    int gender, 
                    string idnumber, 
                    System.DateTime dateofbirth, 
                    string county, 
                    string address, 
                    string isdisable, 
                    string postalcodes, 
                    string email, 
                    string city, 
                    string examcenters, 
                    string examination, 
                    string phoneNumber, 
                    string highestAcademicQualification, 
                    string examCycle, 
                    string currency) {
            this.FnInstitutionStudentRegistrationAsync(applicantNumber, surname, firstname, othernames, gender, idnumber, dateofbirth, county, address, isdisable, postalcodes, email, city, examcenters, examination, phoneNumber, highestAcademicQualification, examCycle, currency, null);
        }
        
        /// <remarks/>
        public void FnInstitutionStudentRegistrationAsync(
                    string applicantNumber, 
                    string surname, 
                    string firstname, 
                    string othernames, 
                    int gender, 
                    string idnumber, 
                    System.DateTime dateofbirth, 
                    string county, 
                    string address, 
                    string isdisable, 
                    string postalcodes, 
                    string email, 
                    string city, 
                    string examcenters, 
                    string examination, 
                    string phoneNumber, 
                    string highestAcademicQualification, 
                    string examCycle, 
                    string currency, 
                    object userState) {
            if ((this.FnInstitutionStudentRegistrationOperationCompleted == null)) {
                this.FnInstitutionStudentRegistrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInstitutionStudentRegistrationOperationCompleted);
            }
            this.InvokeAsync("FnInstitutionStudentRegistration", new object[] {
                        applicantNumber,
                        surname,
                        firstname,
                        othernames,
                        gender,
                        idnumber,
                        dateofbirth,
                        county,
                        address,
                        isdisable,
                        postalcodes,
                        email,
                        city,
                        examcenters,
                        examination,
                        phoneNumber,
                        highestAcademicQualification,
                        examCycle,
                        currency}, this.FnInstitutionStudentRegistrationOperationCompleted, userState);
        }
        
        private void OnFnInstitutionStudentRegistrationOperationCompleted(object arg) {
            if ((this.FnInstitutionStudentRegistrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInstitutionStudentRegistrationCompleted(this, new FnInstitutionStudentRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:InstitutionRegistartion" +
            "Header", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="InstitutionRegistartionHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InstitutionRegistartionHeader(int docType, string institutionNo, string currencyCode, string applicationNo) {
            object[] results = this.Invoke("InstitutionRegistartionHeader", new object[] {
                        docType,
                        institutionNo,
                        currencyCode,
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InstitutionRegistartionHeaderAsync(int docType, string institutionNo, string currencyCode, string applicationNo) {
            this.InstitutionRegistartionHeaderAsync(docType, institutionNo, currencyCode, applicationNo, null);
        }
        
        /// <remarks/>
        public void InstitutionRegistartionHeaderAsync(int docType, string institutionNo, string currencyCode, string applicationNo, object userState) {
            if ((this.InstitutionRegistartionHeaderOperationCompleted == null)) {
                this.InstitutionRegistartionHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInstitutionRegistartionHeaderOperationCompleted);
            }
            this.InvokeAsync("InstitutionRegistartionHeader", new object[] {
                        docType,
                        institutionNo,
                        currencyCode,
                        applicationNo}, this.InstitutionRegistartionHeaderOperationCompleted, userState);
        }
        
        private void OnInstitutionRegistartionHeaderOperationCompleted(object arg) {
            if ((this.InstitutionRegistartionHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InstitutionRegistartionHeaderCompleted(this, new InstitutionRegistartionHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:InstitutionExamBooking", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="InstitutionExamBooking_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InstitutionExamBooking(string applicationNo, string institutionNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime date) {
            object[] results = this.Invoke("InstitutionExamBooking", new object[] {
                        applicationNo,
                        institutionNo,
                        date});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InstitutionExamBookingAsync(string applicationNo, string institutionNo, System.DateTime date) {
            this.InstitutionExamBookingAsync(applicationNo, institutionNo, date, null);
        }
        
        /// <remarks/>
        public void InstitutionExamBookingAsync(string applicationNo, string institutionNo, System.DateTime date, object userState) {
            if ((this.InstitutionExamBookingOperationCompleted == null)) {
                this.InstitutionExamBookingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInstitutionExamBookingOperationCompleted);
            }
            this.InvokeAsync("InstitutionExamBooking", new object[] {
                        applicationNo,
                        institutionNo,
                        date}, this.InstitutionExamBookingOperationCompleted, userState);
        }
        
        private void OnInstitutionExamBookingOperationCompleted(object arg) {
            if ((this.InstitutionExamBookingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InstitutionExamBookingCompleted(this, new InstitutionExamBookingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:CreateExemptionLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="CreateExemptionLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateExemptionLine(int itmType, string item, string currency, string apllicationNo) {
            object[] results = this.Invoke("CreateExemptionLine", new object[] {
                        itmType,
                        item,
                        currency,
                        apllicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateExemptionLineAsync(int itmType, string item, string currency, string apllicationNo) {
            this.CreateExemptionLineAsync(itmType, item, currency, apllicationNo, null);
        }
        
        /// <remarks/>
        public void CreateExemptionLineAsync(int itmType, string item, string currency, string apllicationNo, object userState) {
            if ((this.CreateExemptionLineOperationCompleted == null)) {
                this.CreateExemptionLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateExemptionLineOperationCompleted);
            }
            this.InvokeAsync("CreateExemptionLine", new object[] {
                        itmType,
                        item,
                        currency,
                        apllicationNo}, this.CreateExemptionLineOperationCompleted, userState);
        }
        
        private void OnCreateExemptionLineOperationCompleted(object arg) {
            if ((this.CreateExemptionLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateExemptionLineCompleted(this, new CreateExemptionLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:CreateExemption", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="CreateExemption_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateExemption(string applicationNo, string studentNo, string regNo) {
            object[] results = this.Invoke("CreateExemption", new object[] {
                        applicationNo,
                        studentNo,
                        regNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateExemptionAsync(string applicationNo, string studentNo, string regNo) {
            this.CreateExemptionAsync(applicationNo, studentNo, regNo, null);
        }
        
        /// <remarks/>
        public void CreateExemptionAsync(string applicationNo, string studentNo, string regNo, object userState) {
            if ((this.CreateExemptionOperationCompleted == null)) {
                this.CreateExemptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateExemptionOperationCompleted);
            }
            this.InvokeAsync("CreateExemption", new object[] {
                        applicationNo,
                        studentNo,
                        regNo}, this.CreateExemptionOperationCompleted, userState);
        }
        
        private void OnCreateExemptionOperationCompleted(object arg) {
            if ((this.CreateExemptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateExemptionCompleted(this, new CreateExemptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:CreateWithdrawal", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="CreateWithdrawal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateWithdrawal(string applicationNo, string studentNo, string regNo, string withdrawalReason, string examCycle) {
            object[] results = this.Invoke("CreateWithdrawal", new object[] {
                        applicationNo,
                        studentNo,
                        regNo,
                        withdrawalReason,
                        examCycle});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateWithdrawalAsync(string applicationNo, string studentNo, string regNo, string withdrawalReason, string examCycle) {
            this.CreateWithdrawalAsync(applicationNo, studentNo, regNo, withdrawalReason, examCycle, null);
        }
        
        /// <remarks/>
        public void CreateWithdrawalAsync(string applicationNo, string studentNo, string regNo, string withdrawalReason, string examCycle, object userState) {
            if ((this.CreateWithdrawalOperationCompleted == null)) {
                this.CreateWithdrawalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateWithdrawalOperationCompleted);
            }
            this.InvokeAsync("CreateWithdrawal", new object[] {
                        applicationNo,
                        studentNo,
                        regNo,
                        withdrawalReason,
                        examCycle}, this.CreateWithdrawalOperationCompleted, userState);
        }
        
        private void OnCreateWithdrawalOperationCompleted(object arg) {
            if ((this.CreateWithdrawalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateWithdrawalCompleted(this, new CreateWithdrawalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnInsertMultipleSurveys" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnInsertMultipleSurveys_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertMultipleSurveys(string surveyno, string sectioncode, string questionid, string responsevalue) {
            object[] results = this.Invoke("FnInsertMultipleSurveys", new object[] {
                        surveyno,
                        sectioncode,
                        questionid,
                        responsevalue});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertMultipleSurveysAsync(string surveyno, string sectioncode, string questionid, string responsevalue) {
            this.FnInsertMultipleSurveysAsync(surveyno, sectioncode, questionid, responsevalue, null);
        }
        
        /// <remarks/>
        public void FnInsertMultipleSurveysAsync(string surveyno, string sectioncode, string questionid, string responsevalue, object userState) {
            if ((this.FnInsertMultipleSurveysOperationCompleted == null)) {
                this.FnInsertMultipleSurveysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertMultipleSurveysOperationCompleted);
            }
            this.InvokeAsync("FnInsertMultipleSurveys", new object[] {
                        surveyno,
                        sectioncode,
                        questionid,
                        responsevalue}, this.FnInsertMultipleSurveysOperationCompleted, userState);
        }
        
        private void OnFnInsertMultipleSurveysOperationCompleted(object arg) {
            if ((this.FnInsertMultipleSurveysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertMultipleSurveysCompleted(this, new FnInsertMultipleSurveysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnInsertBranchingRespon" +
            "ses", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnInsertBranchingResponses_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertBranchingResponses(string surveyno, string sectioncode, string parentquestionid, string parentresponse, string questionid, string question, string generalresponse) {
            object[] results = this.Invoke("FnInsertBranchingResponses", new object[] {
                        surveyno,
                        sectioncode,
                        parentquestionid,
                        parentresponse,
                        questionid,
                        question,
                        generalresponse});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertBranchingResponsesAsync(string surveyno, string sectioncode, string parentquestionid, string parentresponse, string questionid, string question, string generalresponse) {
            this.FnInsertBranchingResponsesAsync(surveyno, sectioncode, parentquestionid, parentresponse, questionid, question, generalresponse, null);
        }
        
        /// <remarks/>
        public void FnInsertBranchingResponsesAsync(string surveyno, string sectioncode, string parentquestionid, string parentresponse, string questionid, string question, string generalresponse, object userState) {
            if ((this.FnInsertBranchingResponsesOperationCompleted == null)) {
                this.FnInsertBranchingResponsesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertBranchingResponsesOperationCompleted);
            }
            this.InvokeAsync("FnInsertBranchingResponses", new object[] {
                        surveyno,
                        sectioncode,
                        parentquestionid,
                        parentresponse,
                        questionid,
                        question,
                        generalresponse}, this.FnInsertBranchingResponsesOperationCompleted, userState);
        }
        
        private void OnFnInsertBranchingResponsesOperationCompleted(object arg) {
            if ((this.FnInsertBranchingResponsesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertBranchingResponsesCompleted(this, new FnInsertBranchingResponsesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnSubmitSurvey", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnSubmitSurvey_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitSurvey(string surveyno) {
            object[] results = this.Invoke("FnSubmitSurvey", new object[] {
                        surveyno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitSurveyAsync(string surveyno) {
            this.FnSubmitSurveyAsync(surveyno, null);
        }
        
        /// <remarks/>
        public void FnSubmitSurveyAsync(string surveyno, object userState) {
            if ((this.FnSubmitSurveyOperationCompleted == null)) {
                this.FnSubmitSurveyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitSurveyOperationCompleted);
            }
            this.InvokeAsync("FnSubmitSurvey", new object[] {
                        surveyno}, this.FnSubmitSurveyOperationCompleted, userState);
        }
        
        private void OnFnSubmitSurveyOperationCompleted(object arg) {
            if ((this.FnSubmitSurveyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitSurveyCompleted(this, new FnSubmitSurveyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnCreateBRResponseQuest" +
            "ions", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnCreateBRResponseQuestions_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreateBRResponseQuestions(string surveyno, string scectioncode, string question, string ratingoption, string generalresponse) {
            object[] results = this.Invoke("FnCreateBRResponseQuestions", new object[] {
                        surveyno,
                        scectioncode,
                        question,
                        ratingoption,
                        generalresponse});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateBRResponseQuestionsAsync(string surveyno, string scectioncode, string question, string ratingoption, string generalresponse) {
            this.FnCreateBRResponseQuestionsAsync(surveyno, scectioncode, question, ratingoption, generalresponse, null);
        }
        
        /// <remarks/>
        public void FnCreateBRResponseQuestionsAsync(string surveyno, string scectioncode, string question, string ratingoption, string generalresponse, object userState) {
            if ((this.FnCreateBRResponseQuestionsOperationCompleted == null)) {
                this.FnCreateBRResponseQuestionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateBRResponseQuestionsOperationCompleted);
            }
            this.InvokeAsync("FnCreateBRResponseQuestions", new object[] {
                        surveyno,
                        scectioncode,
                        question,
                        ratingoption,
                        generalresponse}, this.FnCreateBRResponseQuestionsOperationCompleted, userState);
        }
        
        private void OnFnCreateBRResponseQuestionsOperationCompleted(object arg) {
            if ((this.FnCreateBRResponseQuestionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateBRResponseQuestionsCompleted(this, new FnCreateBRResponseQuestionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:CreateRenewal", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="CreateRenewal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateRenewal(string applicationNo, string studentNo, string regNos, decimal amount) {
            object[] results = this.Invoke("CreateRenewal", new object[] {
                        applicationNo,
                        studentNo,
                        regNos,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateRenewalAsync(string applicationNo, string studentNo, string regNos, decimal amount) {
            this.CreateRenewalAsync(applicationNo, studentNo, regNos, amount, null);
        }
        
        /// <remarks/>
        public void CreateRenewalAsync(string applicationNo, string studentNo, string regNos, decimal amount, object userState) {
            if ((this.CreateRenewalOperationCompleted == null)) {
                this.CreateRenewalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRenewalOperationCompleted);
            }
            this.InvokeAsync("CreateRenewal", new object[] {
                        applicationNo,
                        studentNo,
                        regNos,
                        amount}, this.CreateRenewalOperationCompleted, userState);
        }
        
        private void OnCreateRenewalOperationCompleted(object arg) {
            if ((this.CreateRenewalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateRenewalCompleted(this, new CreateRenewalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:CreateReactivation", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="CreateReactivation_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateReactivation(string applicationNo, string studentNo) {
            object[] results = this.Invoke("CreateReactivation", new object[] {
                        applicationNo,
                        studentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateReactivationAsync(string applicationNo, string studentNo) {
            this.CreateReactivationAsync(applicationNo, studentNo, null);
        }
        
        /// <remarks/>
        public void CreateReactivationAsync(string applicationNo, string studentNo, object userState) {
            if ((this.CreateReactivationOperationCompleted == null)) {
                this.CreateReactivationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateReactivationOperationCompleted);
            }
            this.InvokeAsync("CreateReactivation", new object[] {
                        applicationNo,
                        studentNo}, this.CreateReactivationOperationCompleted, userState);
        }
        
        private void OnCreateReactivationOperationCompleted(object arg) {
            if ((this.CreateReactivationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateReactivationCompleted(this, new CreateReactivationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:CreateRenewalLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="CreateRenewalLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateRenewalLine(string studentNo, string regNo, string applicationNo, decimal amount) {
            object[] results = this.Invoke("CreateRenewalLine", new object[] {
                        studentNo,
                        regNo,
                        applicationNo,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateRenewalLineAsync(string studentNo, string regNo, string applicationNo, decimal amount) {
            this.CreateRenewalLineAsync(studentNo, regNo, applicationNo, amount, null);
        }
        
        /// <remarks/>
        public void CreateRenewalLineAsync(string studentNo, string regNo, string applicationNo, decimal amount, object userState) {
            if ((this.CreateRenewalLineOperationCompleted == null)) {
                this.CreateRenewalLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRenewalLineOperationCompleted);
            }
            this.InvokeAsync("CreateRenewalLine", new object[] {
                        studentNo,
                        regNo,
                        applicationNo,
                        amount}, this.CreateRenewalLineOperationCompleted, userState);
        }
        
        private void OnCreateRenewalLineOperationCompleted(object arg) {
            if ((this.CreateRenewalLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateRenewalLineCompleted(this, new CreateRenewalLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:CreateReactivationLine", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="CreateReactivationLine_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateReactivationLine(string applicationNo, string regNumber, decimal amt, string studentNo) {
            object[] results = this.Invoke("CreateReactivationLine", new object[] {
                        applicationNo,
                        regNumber,
                        amt,
                        studentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateReactivationLineAsync(string applicationNo, string regNumber, decimal amt, string studentNo) {
            this.CreateReactivationLineAsync(applicationNo, regNumber, amt, studentNo, null);
        }
        
        /// <remarks/>
        public void CreateReactivationLineAsync(string applicationNo, string regNumber, decimal amt, string studentNo, object userState) {
            if ((this.CreateReactivationLineOperationCompleted == null)) {
                this.CreateReactivationLineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateReactivationLineOperationCompleted);
            }
            this.InvokeAsync("CreateReactivationLine", new object[] {
                        applicationNo,
                        regNumber,
                        amt,
                        studentNo}, this.CreateReactivationLineOperationCompleted, userState);
        }
        
        private void OnCreateReactivationLineOperationCompleted(object arg) {
            if ((this.CreateReactivationLineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateReactivationLineCompleted(this, new CreateReactivationLineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnAddDisability", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnAddDisability_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAddDisability(string applicationNo, string disatilityType, string description) {
            object[] results = this.Invoke("FnAddDisability", new object[] {
                        applicationNo,
                        disatilityType,
                        description});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddDisabilityAsync(string applicationNo, string disatilityType, string description) {
            this.FnAddDisabilityAsync(applicationNo, disatilityType, description, null);
        }
        
        /// <remarks/>
        public void FnAddDisabilityAsync(string applicationNo, string disatilityType, string description, object userState) {
            if ((this.FnAddDisabilityOperationCompleted == null)) {
                this.FnAddDisabilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddDisabilityOperationCompleted);
            }
            this.InvokeAsync("FnAddDisability", new object[] {
                        applicationNo,
                        disatilityType,
                        description}, this.FnAddDisabilityOperationCompleted, userState);
        }
        
        private void OnFnAddDisabilityOperationCompleted(object arg) {
            if ((this.FnAddDisabilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddDisabilityCompleted(this, new FnAddDisabilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:GenerateTimetable", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="GenerateTimetable_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateTimetable(string code) {
            object[] results = this.Invoke("GenerateTimetable", new object[] {
                        code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateTimetableAsync(string code) {
            this.GenerateTimetableAsync(code, null);
        }
        
        /// <remarks/>
        public void GenerateTimetableAsync(string code, object userState) {
            if ((this.GenerateTimetableOperationCompleted == null)) {
                this.GenerateTimetableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateTimetableOperationCompleted);
            }
            this.InvokeAsync("GenerateTimetable", new object[] {
                        code}, this.GenerateTimetableOperationCompleted, userState);
        }
        
        private void OnGenerateTimetableOperationCompleted(object arg) {
            if ((this.GenerateTimetableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateTimetableCompleted(this, new GenerateTimetableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnSubmitApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnSubmitApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitApplication(string applicationNo) {
            object[] results = this.Invoke("FnSubmitApplication", new object[] {
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitApplicationAsync(string applicationNo) {
            this.FnSubmitApplicationAsync(applicationNo, null);
        }
        
        /// <remarks/>
        public void FnSubmitApplicationAsync(string applicationNo, object userState) {
            if ((this.FnSubmitApplicationOperationCompleted == null)) {
                this.FnSubmitApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitApplicationOperationCompleted);
            }
            this.InvokeAsync("FnSubmitApplication", new object[] {
                        applicationNo}, this.FnSubmitApplicationOperationCompleted, userState);
        }
        
        private void OnFnSubmitApplicationOperationCompleted(object arg) {
            if ((this.FnSubmitApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitApplicationCompleted(this, new FnSubmitApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:StudentTimetable", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="StudentTimetable_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string StudentTimetable(string code) {
            object[] results = this.Invoke("StudentTimetable", new object[] {
                        code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void StudentTimetableAsync(string code) {
            this.StudentTimetableAsync(code, null);
        }
        
        /// <remarks/>
        public void StudentTimetableAsync(string code, object userState) {
            if ((this.StudentTimetableOperationCompleted == null)) {
                this.StudentTimetableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStudentTimetableOperationCompleted);
            }
            this.InvokeAsync("StudentTimetable", new object[] {
                        code}, this.StudentTimetableOperationCompleted, userState);
        }
        
        private void OnStudentTimetableOperationCompleted(object arg) {
            if ((this.StudentTimetableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StudentTimetableCompleted(this, new StudentTimetableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:Invoice", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="Invoice_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Invoice(string code) {
            object[] results = this.Invoke("Invoice", new object[] {
                        code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InvoiceAsync(string code) {
            this.InvoiceAsync(code, null);
        }
        
        /// <remarks/>
        public void InvoiceAsync(string code, object userState) {
            if ((this.InvoiceOperationCompleted == null)) {
                this.InvoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInvoiceOperationCompleted);
            }
            this.InvokeAsync("Invoice", new object[] {
                        code}, this.InvoiceOperationCompleted, userState);
        }
        
        private void OnInvoiceOperationCompleted(object arg) {
            if ((this.InvoiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InvoiceCompleted(this, new InvoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:AddRegistrationSharepoi" +
            "ntLinks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="AddRegistrationSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddRegistrationSharepointLinks(string applicationNo, string filename, string sharepointlink) {
            object[] results = this.Invoke("AddRegistrationSharepointLinks", new object[] {
                        applicationNo,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddRegistrationSharepointLinksAsync(string applicationNo, string filename, string sharepointlink) {
            this.AddRegistrationSharepointLinksAsync(applicationNo, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void AddRegistrationSharepointLinksAsync(string applicationNo, string filename, string sharepointlink, object userState) {
            if ((this.AddRegistrationSharepointLinksOperationCompleted == null)) {
                this.AddRegistrationSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRegistrationSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("AddRegistrationSharepointLinks", new object[] {
                        applicationNo,
                        filename,
                        sharepointlink}, this.AddRegistrationSharepointLinksOperationCompleted, userState);
        }
        
        private void OnAddRegistrationSharepointLinksOperationCompleted(object arg) {
            if ((this.AddRegistrationSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRegistrationSharepointLinksCompleted(this, new AddRegistrationSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnConfirmPayment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnConfirmPayment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnConfirmPayment(string applicationNo, string phoneNumber, decimal amount) {
            object[] results = this.Invoke("FnConfirmPayment", new object[] {
                        applicationNo,
                        phoneNumber,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnConfirmPaymentAsync(string applicationNo, string phoneNumber, decimal amount) {
            this.FnConfirmPaymentAsync(applicationNo, phoneNumber, amount, null);
        }
        
        /// <remarks/>
        public void FnConfirmPaymentAsync(string applicationNo, string phoneNumber, decimal amount, object userState) {
            if ((this.FnConfirmPaymentOperationCompleted == null)) {
                this.FnConfirmPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnConfirmPaymentOperationCompleted);
            }
            this.InvokeAsync("FnConfirmPayment", new object[] {
                        applicationNo,
                        phoneNumber,
                        amount}, this.FnConfirmPaymentOperationCompleted, userState);
        }
        
        private void OnFnConfirmPaymentOperationCompleted(object arg) {
            if ((this.FnConfirmPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnConfirmPaymentCompleted(this, new FnConfirmPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:CreateExemptionQualific" +
            "ations", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="CreateExemptionQualifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string CreateExemptionQualifications(string applicationNo, int qualificationType, string qulificatioCode) {
            object[] results = this.Invoke("CreateExemptionQualifications", new object[] {
                        applicationNo,
                        qualificationType,
                        qulificatioCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateExemptionQualificationsAsync(string applicationNo, int qualificationType, string qulificatioCode) {
            this.CreateExemptionQualificationsAsync(applicationNo, qualificationType, qulificatioCode, null);
        }
        
        /// <remarks/>
        public void CreateExemptionQualificationsAsync(string applicationNo, int qualificationType, string qulificatioCode, object userState) {
            if ((this.CreateExemptionQualificationsOperationCompleted == null)) {
                this.CreateExemptionQualificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateExemptionQualificationsOperationCompleted);
            }
            this.InvokeAsync("CreateExemptionQualifications", new object[] {
                        applicationNo,
                        qualificationType,
                        qulificatioCode}, this.CreateExemptionQualificationsOperationCompleted, userState);
        }
        
        private void OnCreateExemptionQualificationsOperationCompleted(object arg) {
            if ((this.CreateExemptionQualificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateExemptionQualificationsCompleted(this, new CreateExemptionQualificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:ExemptionLetter", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="ExemptionLetter_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ExemptionLetter(string code) {
            object[] results = this.Invoke("ExemptionLetter", new object[] {
                        code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExemptionLetterAsync(string code) {
            this.ExemptionLetterAsync(code, null);
        }
        
        /// <remarks/>
        public void ExemptionLetterAsync(string code, object userState) {
            if ((this.ExemptionLetterOperationCompleted == null)) {
                this.ExemptionLetterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExemptionLetterOperationCompleted);
            }
            this.InvokeAsync("ExemptionLetter", new object[] {
                        code}, this.ExemptionLetterOperationCompleted, userState);
        }
        
        private void OnExemptionLetterOperationCompleted(object arg) {
            if ((this.ExemptionLetterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExemptionLetterCompleted(this, new ExemptionLetterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnSubmitExeptionApplica" +
            "tion", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnSubmitExeptionApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitExeptionApplication(string applicationNo) {
            object[] results = this.Invoke("FnSubmitExeptionApplication", new object[] {
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitExeptionApplicationAsync(string applicationNo) {
            this.FnSubmitExeptionApplicationAsync(applicationNo, null);
        }
        
        /// <remarks/>
        public void FnSubmitExeptionApplicationAsync(string applicationNo, object userState) {
            if ((this.FnSubmitExeptionApplicationOperationCompleted == null)) {
                this.FnSubmitExeptionApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitExeptionApplicationOperationCompleted);
            }
            this.InvokeAsync("FnSubmitExeptionApplication", new object[] {
                        applicationNo}, this.FnSubmitExeptionApplicationOperationCompleted, userState);
        }
        
        private void OnFnSubmitExeptionApplicationOperationCompleted(object arg) {
            if ((this.FnSubmitExeptionApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitExeptionApplicationCompleted(this, new FnSubmitExeptionApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:EditRegistrationApplica" +
            "tion", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="EditRegistrationApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string EditRegistrationApplication(string applicationNo, int gender, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dob, string address, string phoneNumber) {
            object[] results = this.Invoke("EditRegistrationApplication", new object[] {
                        applicationNo,
                        gender,
                        dob,
                        address,
                        phoneNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EditRegistrationApplicationAsync(string applicationNo, int gender, System.DateTime dob, string address, string phoneNumber) {
            this.EditRegistrationApplicationAsync(applicationNo, gender, dob, address, phoneNumber, null);
        }
        
        /// <remarks/>
        public void EditRegistrationApplicationAsync(string applicationNo, int gender, System.DateTime dob, string address, string phoneNumber, object userState) {
            if ((this.EditRegistrationApplicationOperationCompleted == null)) {
                this.EditRegistrationApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditRegistrationApplicationOperationCompleted);
            }
            this.InvokeAsync("EditRegistrationApplication", new object[] {
                        applicationNo,
                        gender,
                        dob,
                        address,
                        phoneNumber}, this.EditRegistrationApplicationOperationCompleted, userState);
        }
        
        private void OnEditRegistrationApplicationOperationCompleted(object arg) {
            if ((this.EditRegistrationApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditRegistrationApplicationCompleted(this, new EditRegistrationApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnConfirmAttendance", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnConfirmAttendance_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnConfirmAttendance(string applicantNumber, string studentNo, string trainingNo) {
            object[] results = this.Invoke("FnConfirmAttendance", new object[] {
                        applicantNumber,
                        studentNo,
                        trainingNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnConfirmAttendanceAsync(string applicantNumber, string studentNo, string trainingNo) {
            this.FnConfirmAttendanceAsync(applicantNumber, studentNo, trainingNo, null);
        }
        
        /// <remarks/>
        public void FnConfirmAttendanceAsync(string applicantNumber, string studentNo, string trainingNo, object userState) {
            if ((this.FnConfirmAttendanceOperationCompleted == null)) {
                this.FnConfirmAttendanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnConfirmAttendanceOperationCompleted);
            }
            this.InvokeAsync("FnConfirmAttendance", new object[] {
                        applicantNumber,
                        studentNo,
                        trainingNo}, this.FnConfirmAttendanceOperationCompleted, userState);
        }
        
        private void OnFnConfirmAttendanceOperationCompleted(object arg) {
            if ((this.FnConfirmAttendanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnConfirmAttendanceCompleted(this, new FnConfirmAttendanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnApplyJob", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnApplyJob_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnApplyJob(string applicantNumber, string studentNo, string trainingNo) {
            object[] results = this.Invoke("FnApplyJob", new object[] {
                        applicantNumber,
                        studentNo,
                        trainingNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnApplyJobAsync(string applicantNumber, string studentNo, string trainingNo) {
            this.FnApplyJobAsync(applicantNumber, studentNo, trainingNo, null);
        }
        
        /// <remarks/>
        public void FnApplyJobAsync(string applicantNumber, string studentNo, string trainingNo, object userState) {
            if ((this.FnApplyJobOperationCompleted == null)) {
                this.FnApplyJobOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnApplyJobOperationCompleted);
            }
            this.InvokeAsync("FnApplyJob", new object[] {
                        applicantNumber,
                        studentNo,
                        trainingNo}, this.FnApplyJobOperationCompleted, userState);
        }
        
        private void OnFnApplyJobOperationCompleted(object arg) {
            if ((this.FnApplyJobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnApplyJobCompleted(this, new FnApplyJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:AddExemptionSharepointL" +
            "inks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="AddExemptionSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddExemptionSharepointLinks(string applicationNo, string filename, string sharepointlink) {
            object[] results = this.Invoke("AddExemptionSharepointLinks", new object[] {
                        applicationNo,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddExemptionSharepointLinksAsync(string applicationNo, string filename, string sharepointlink) {
            this.AddExemptionSharepointLinksAsync(applicationNo, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void AddExemptionSharepointLinksAsync(string applicationNo, string filename, string sharepointlink, object userState) {
            if ((this.AddExemptionSharepointLinksOperationCompleted == null)) {
                this.AddExemptionSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddExemptionSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("AddExemptionSharepointLinks", new object[] {
                        applicationNo,
                        filename,
                        sharepointlink}, this.AddExemptionSharepointLinksOperationCompleted, userState);
        }
        
        private void OnAddExemptionSharepointLinksOperationCompleted(object arg) {
            if ((this.AddExemptionSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddExemptionSharepointLinksCompleted(this, new AddExemptionSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnInsertBookingLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnInsertBookingLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertBookingLines(string part, string paper, string applicationNo) {
            object[] results = this.Invoke("FnInsertBookingLines", new object[] {
                        part,
                        paper,
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertBookingLinesAsync(string part, string paper, string applicationNo) {
            this.FnInsertBookingLinesAsync(part, paper, applicationNo, null);
        }
        
        /// <remarks/>
        public void FnInsertBookingLinesAsync(string part, string paper, string applicationNo, object userState) {
            if ((this.FnInsertBookingLinesOperationCompleted == null)) {
                this.FnInsertBookingLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertBookingLinesOperationCompleted);
            }
            this.InvokeAsync("FnInsertBookingLines", new object[] {
                        part,
                        paper,
                        applicationNo}, this.FnInsertBookingLinesOperationCompleted, userState);
        }
        
        private void OnFnInsertBookingLinesOperationCompleted(object arg) {
            if ((this.FnInsertBookingLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertBookingLinesCompleted(this, new FnInsertBookingLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:RemoveExaminationPaper", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="RemoveExaminationPaper_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveExaminationPaper(string applicationNo, string entryNo) {
            object[] results = this.Invoke("RemoveExaminationPaper", new object[] {
                        applicationNo,
                        entryNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveExaminationPaperAsync(string applicationNo, string entryNo) {
            this.RemoveExaminationPaperAsync(applicationNo, entryNo, null);
        }
        
        /// <remarks/>
        public void RemoveExaminationPaperAsync(string applicationNo, string entryNo, object userState) {
            if ((this.RemoveExaminationPaperOperationCompleted == null)) {
                this.RemoveExaminationPaperOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveExaminationPaperOperationCompleted);
            }
            this.InvokeAsync("RemoveExaminationPaper", new object[] {
                        applicationNo,
                        entryNo}, this.RemoveExaminationPaperOperationCompleted, userState);
        }
        
        private void OnRemoveExaminationPaperOperationCompleted(object arg) {
            if ((this.RemoveExaminationPaperCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveExaminationPaperCompleted(this, new RemoveExaminationPaperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnConfirmExamCenter", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnConfirmExamCenter_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnConfirmExamCenter(string applicationNo, string examCenter) {
            object[] results = this.Invoke("FnConfirmExamCenter", new object[] {
                        applicationNo,
                        examCenter});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnConfirmExamCenterAsync(string applicationNo, string examCenter) {
            this.FnConfirmExamCenterAsync(applicationNo, examCenter, null);
        }
        
        /// <remarks/>
        public void FnConfirmExamCenterAsync(string applicationNo, string examCenter, object userState) {
            if ((this.FnConfirmExamCenterOperationCompleted == null)) {
                this.FnConfirmExamCenterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnConfirmExamCenterOperationCompleted);
            }
            this.InvokeAsync("FnConfirmExamCenter", new object[] {
                        applicationNo,
                        examCenter}, this.FnConfirmExamCenterOperationCompleted, userState);
        }
        
        private void OnFnConfirmExamCenterOperationCompleted(object arg) {
            if ((this.FnConfirmExamCenterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnConfirmExamCenterCompleted(this, new FnConfirmExamCenterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnConfirmBookingPayment" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnConfirmBookingPayment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnConfirmBookingPayment(string applicationNo, string phoneNumber, decimal amount) {
            object[] results = this.Invoke("FnConfirmBookingPayment", new object[] {
                        applicationNo,
                        phoneNumber,
                        amount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnConfirmBookingPaymentAsync(string applicationNo, string phoneNumber, decimal amount) {
            this.FnConfirmBookingPaymentAsync(applicationNo, phoneNumber, amount, null);
        }
        
        /// <remarks/>
        public void FnConfirmBookingPaymentAsync(string applicationNo, string phoneNumber, decimal amount, object userState) {
            if ((this.FnConfirmBookingPaymentOperationCompleted == null)) {
                this.FnConfirmBookingPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnConfirmBookingPaymentOperationCompleted);
            }
            this.InvokeAsync("FnConfirmBookingPayment", new object[] {
                        applicationNo,
                        phoneNumber,
                        amount}, this.FnConfirmBookingPaymentOperationCompleted, userState);
        }
        
        private void OnFnConfirmBookingPaymentOperationCompleted(object arg) {
            if ((this.FnConfirmBookingPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnConfirmBookingPaymentCompleted(this, new FnConfirmBookingPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:AddVacancySharepointLin" +
            "ks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="AddVacancySharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddVacancySharepointLinks(string applicationNo, string filename, string sharepointlink) {
            object[] results = this.Invoke("AddVacancySharepointLinks", new object[] {
                        applicationNo,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddVacancySharepointLinksAsync(string applicationNo, string filename, string sharepointlink) {
            this.AddVacancySharepointLinksAsync(applicationNo, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void AddVacancySharepointLinksAsync(string applicationNo, string filename, string sharepointlink, object userState) {
            if ((this.AddVacancySharepointLinksOperationCompleted == null)) {
                this.AddVacancySharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddVacancySharepointLinksOperationCompleted);
            }
            this.InvokeAsync("AddVacancySharepointLinks", new object[] {
                        applicationNo,
                        filename,
                        sharepointlink}, this.AddVacancySharepointLinksOperationCompleted, userState);
        }
        
        private void OnAddVacancySharepointLinksOperationCompleted(object arg) {
            if ((this.AddVacancySharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddVacancySharepointLinksCompleted(this, new AddVacancySharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:BookingInvoice", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="BookingInvoice_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string BookingInvoice(string code) {
            object[] results = this.Invoke("BookingInvoice", new object[] {
                        code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BookingInvoiceAsync(string code) {
            this.BookingInvoiceAsync(code, null);
        }
        
        /// <remarks/>
        public void BookingInvoiceAsync(string code, object userState) {
            if ((this.BookingInvoiceOperationCompleted == null)) {
                this.BookingInvoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBookingInvoiceOperationCompleted);
            }
            this.InvokeAsync("BookingInvoice", new object[] {
                        code}, this.BookingInvoiceOperationCompleted, userState);
        }
        
        private void OnBookingInvoiceOperationCompleted(object arg) {
            if ((this.BookingInvoiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BookingInvoiceCompleted(this, new BookingInvoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnCaseManagement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnCaseManagement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCaseManagement(string applicantNumber, int casetype, string subject, string description, string studentNo) {
            object[] results = this.Invoke("FnCaseManagement", new object[] {
                        applicantNumber,
                        casetype,
                        subject,
                        description,
                        studentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCaseManagementAsync(string applicantNumber, int casetype, string subject, string description, string studentNo) {
            this.FnCaseManagementAsync(applicantNumber, casetype, subject, description, studentNo, null);
        }
        
        /// <remarks/>
        public void FnCaseManagementAsync(string applicantNumber, int casetype, string subject, string description, string studentNo, object userState) {
            if ((this.FnCaseManagementOperationCompleted == null)) {
                this.FnCaseManagementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCaseManagementOperationCompleted);
            }
            this.InvokeAsync("FnCaseManagement", new object[] {
                        applicantNumber,
                        casetype,
                        subject,
                        description,
                        studentNo}, this.FnCaseManagementOperationCompleted, userState);
        }
        
        private void OnFnCaseManagementOperationCompleted(object arg) {
            if ((this.FnCaseManagementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCaseManagementCompleted(this, new FnCaseManagementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnCenterRecollocate", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnCenterRecollocate_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCenterRecollocate(string applicationNo, string regNo, string region, string zone, string examcenter, string newexamcenter) {
            object[] results = this.Invoke("FnCenterRecollocate", new object[] {
                        applicationNo,
                        regNo,
                        region,
                        zone,
                        examcenter,
                        newexamcenter});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCenterRecollocateAsync(string applicationNo, string regNo, string region, string zone, string examcenter, string newexamcenter) {
            this.FnCenterRecollocateAsync(applicationNo, regNo, region, zone, examcenter, newexamcenter, null);
        }
        
        /// <remarks/>
        public void FnCenterRecollocateAsync(string applicationNo, string regNo, string region, string zone, string examcenter, string newexamcenter, object userState) {
            if ((this.FnCenterRecollocateOperationCompleted == null)) {
                this.FnCenterRecollocateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCenterRecollocateOperationCompleted);
            }
            this.InvokeAsync("FnCenterRecollocate", new object[] {
                        applicationNo,
                        regNo,
                        region,
                        zone,
                        examcenter,
                        newexamcenter}, this.FnCenterRecollocateOperationCompleted, userState);
        }
        
        private void OnFnCenterRecollocateOperationCompleted(object arg) {
            if ((this.FnCenterRecollocateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCenterRecollocateCompleted(this, new FnCenterRecollocateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnEditProfile", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnEditProfile_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnEditProfile(string iDNumber, string address, string address2, string city, string postcode, string country, string phoneNumber, string email, string county) {
            object[] results = this.Invoke("FnEditProfile", new object[] {
                        iDNumber,
                        address,
                        address2,
                        city,
                        postcode,
                        country,
                        phoneNumber,
                        email,
                        county});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnEditProfileAsync(string iDNumber, string address, string address2, string city, string postcode, string country, string phoneNumber, string email, string county) {
            this.FnEditProfileAsync(iDNumber, address, address2, city, postcode, country, phoneNumber, email, county, null);
        }
        
        /// <remarks/>
        public void FnEditProfileAsync(string iDNumber, string address, string address2, string city, string postcode, string country, string phoneNumber, string email, string county, object userState) {
            if ((this.FnEditProfileOperationCompleted == null)) {
                this.FnEditProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditProfileOperationCompleted);
            }
            this.InvokeAsync("FnEditProfile", new object[] {
                        iDNumber,
                        address,
                        address2,
                        city,
                        postcode,
                        country,
                        phoneNumber,
                        email,
                        county}, this.FnEditProfileOperationCompleted, userState);
        }
        
        private void OnFnEditProfileOperationCompleted(object arg) {
            if ((this.FnEditProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditProfileCompleted(this, new FnEditProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnEditstudentEMAIL", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnEditstudentEMAIL_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnEditstudentEMAIL(string idNumber, string phoneNumber, string email) {
            object[] results = this.Invoke("FnEditstudentEMAIL", new object[] {
                        idNumber,
                        phoneNumber,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnEditstudentEMAILAsync(string idNumber, string phoneNumber, string email) {
            this.FnEditstudentEMAILAsync(idNumber, phoneNumber, email, null);
        }
        
        /// <remarks/>
        public void FnEditstudentEMAILAsync(string idNumber, string phoneNumber, string email, object userState) {
            if ((this.FnEditstudentEMAILOperationCompleted == null)) {
                this.FnEditstudentEMAILOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditstudentEMAILOperationCompleted);
            }
            this.InvokeAsync("FnEditstudentEMAIL", new object[] {
                        idNumber,
                        phoneNumber,
                        email}, this.FnEditstudentEMAILOperationCompleted, userState);
        }
        
        private void OnFnEditstudentEMAILOperationCompleted(object arg) {
            if ((this.FnEditstudentEMAILCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditstudentEMAILCompleted(this, new FnEditstudentEMAILCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnEditstudent", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnEditstudent_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnEditstudent(string idNumber, string phoneNumber, string email, string regNo) {
            object[] results = this.Invoke("FnEditstudent", new object[] {
                        idNumber,
                        phoneNumber,
                        email,
                        regNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnEditstudentAsync(string idNumber, string phoneNumber, string email, string regNo) {
            this.FnEditstudentAsync(idNumber, phoneNumber, email, regNo, null);
        }
        
        /// <remarks/>
        public void FnEditstudentAsync(string idNumber, string phoneNumber, string email, string regNo, object userState) {
            if ((this.FnEditstudentOperationCompleted == null)) {
                this.FnEditstudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditstudentOperationCompleted);
            }
            this.InvokeAsync("FnEditstudent", new object[] {
                        idNumber,
                        phoneNumber,
                        email,
                        regNo}, this.FnEditstudentOperationCompleted, userState);
        }
        
        private void OnFnEditstudentOperationCompleted(object arg) {
            if ((this.FnEditstudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditstudentCompleted(this, new FnEditstudentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnUploadProfilePhotopro" +
            "file", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnUploadProfilePhotoprofile_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUploadProfilePhotoprofile(string studentNo) {
            object[] results = this.Invoke("FnUploadProfilePhotoprofile", new object[] {
                        studentNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUploadProfilePhotoprofileAsync(string studentNo) {
            this.FnUploadProfilePhotoprofileAsync(studentNo, null);
        }
        
        /// <remarks/>
        public void FnUploadProfilePhotoprofileAsync(string studentNo, object userState) {
            if ((this.FnUploadProfilePhotoprofileOperationCompleted == null)) {
                this.FnUploadProfilePhotoprofileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUploadProfilePhotoprofileOperationCompleted);
            }
            this.InvokeAsync("FnUploadProfilePhotoprofile", new object[] {
                        studentNo}, this.FnUploadProfilePhotoprofileOperationCompleted, userState);
        }
        
        private void OnFnUploadProfilePhotoprofileOperationCompleted(object arg) {
            if ((this.FnUploadProfilePhotoprofileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUploadProfilePhotoprofileCompleted(this, new FnUploadProfilePhotoprofileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnDisplayPapers", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnDisplayPapers_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDisplayPapers(string applicationNo) {
            object[] results = this.Invoke("FnDisplayPapers", new object[] {
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDisplayPapersAsync(string applicationNo) {
            this.FnDisplayPapersAsync(applicationNo, null);
        }
        
        /// <remarks/>
        public void FnDisplayPapersAsync(string applicationNo, object userState) {
            if ((this.FnDisplayPapersOperationCompleted == null)) {
                this.FnDisplayPapersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDisplayPapersOperationCompleted);
            }
            this.InvokeAsync("FnDisplayPapers", new object[] {
                        applicationNo}, this.FnDisplayPapersOperationCompleted, userState);
        }
        
        private void OnFnDisplayPapersOperationCompleted(object arg) {
            if ((this.FnDisplayPapersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDisplayPapersCompleted(this, new FnDisplayPapersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:RemoveExemptionPaper", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="RemoveExemptionPaper_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveExemptionPaper(string applicationNo, int entryNo) {
            object[] results = this.Invoke("RemoveExemptionPaper", new object[] {
                        applicationNo,
                        entryNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveExemptionPaperAsync(string applicationNo, int entryNo) {
            this.RemoveExemptionPaperAsync(applicationNo, entryNo, null);
        }
        
        /// <remarks/>
        public void RemoveExemptionPaperAsync(string applicationNo, int entryNo, object userState) {
            if ((this.RemoveExemptionPaperOperationCompleted == null)) {
                this.RemoveExemptionPaperOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveExemptionPaperOperationCompleted);
            }
            this.InvokeAsync("RemoveExemptionPaper", new object[] {
                        applicationNo,
                        entryNo}, this.RemoveExemptionPaperOperationCompleted, userState);
        }
        
        private void OnRemoveExemptionPaperOperationCompleted(object arg) {
            if ((this.RemoveExemptionPaperCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveExemptionPaperCompleted(this, new RemoveExemptionPaperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:RemoveQualificationPape" +
            "r", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="RemoveQualificationPaper_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RemoveQualificationPaper(string applicationNo, int entryNo) {
            object[] results = this.Invoke("RemoveQualificationPaper", new object[] {
                        applicationNo,
                        entryNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveQualificationPaperAsync(string applicationNo, int entryNo) {
            this.RemoveQualificationPaperAsync(applicationNo, entryNo, null);
        }
        
        /// <remarks/>
        public void RemoveQualificationPaperAsync(string applicationNo, int entryNo, object userState) {
            if ((this.RemoveQualificationPaperOperationCompleted == null)) {
                this.RemoveQualificationPaperOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveQualificationPaperOperationCompleted);
            }
            this.InvokeAsync("RemoveQualificationPaper", new object[] {
                        applicationNo,
                        entryNo}, this.RemoveQualificationPaperOperationCompleted, userState);
        }
        
        private void OnRemoveQualificationPaperOperationCompleted(object arg) {
            if ((this.RemoveQualificationPaperCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveQualificationPaperCompleted(this, new RemoveQualificationPaperCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnConfirmPayments", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnConfirmPayments_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnConfirmPayments(string applicationNo) {
            object[] results = this.Invoke("FnConfirmPayments", new object[] {
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnConfirmPaymentsAsync(string applicationNo) {
            this.FnConfirmPaymentsAsync(applicationNo, null);
        }
        
        /// <remarks/>
        public void FnConfirmPaymentsAsync(string applicationNo, object userState) {
            if ((this.FnConfirmPaymentsOperationCompleted == null)) {
                this.FnConfirmPaymentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnConfirmPaymentsOperationCompleted);
            }
            this.InvokeAsync("FnConfirmPayments", new object[] {
                        applicationNo}, this.FnConfirmPaymentsOperationCompleted, userState);
        }
        
        private void OnFnConfirmPaymentsOperationCompleted(object arg) {
            if ((this.FnConfirmPaymentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnConfirmPaymentsCompleted(this, new FnConfirmPaymentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnsuggestPapers", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnsuggestPapers_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnsuggestPapers(string applicationNo) {
            object[] results = this.Invoke("FnsuggestPapers", new object[] {
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnsuggestPapersAsync(string applicationNo) {
            this.FnsuggestPapersAsync(applicationNo, null);
        }
        
        /// <remarks/>
        public void FnsuggestPapersAsync(string applicationNo, object userState) {
            if ((this.FnsuggestPapersOperationCompleted == null)) {
                this.FnsuggestPapersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnsuggestPapersOperationCompleted);
            }
            this.InvokeAsync("FnsuggestPapers", new object[] {
                        applicationNo}, this.FnsuggestPapersOperationCompleted, userState);
        }
        
        private void OnFnsuggestPapersOperationCompleted(object arg) {
            if ((this.FnsuggestPapersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnsuggestPapersCompleted(this, new FnsuggestPapersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:RenewalInvoice", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="RenewalInvoice_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string RenewalInvoice(string code) {
            object[] results = this.Invoke("RenewalInvoice", new object[] {
                        code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RenewalInvoiceAsync(string code) {
            this.RenewalInvoiceAsync(code, null);
        }
        
        /// <remarks/>
        public void RenewalInvoiceAsync(string code, object userState) {
            if ((this.RenewalInvoiceOperationCompleted == null)) {
                this.RenewalInvoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRenewalInvoiceOperationCompleted);
            }
            this.InvokeAsync("RenewalInvoice", new object[] {
                        code}, this.RenewalInvoiceOperationCompleted, userState);
        }
        
        private void OnRenewalInvoiceOperationCompleted(object arg) {
            if ((this.RenewalInvoiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RenewalInvoiceCompleted(this, new RenewalInvoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:AddWithdrawalSharepoint" +
            "Links", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="AddWithdrawalSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddWithdrawalSharepointLinks(string applicationNo, string filename, string sharepointlink) {
            object[] results = this.Invoke("AddWithdrawalSharepointLinks", new object[] {
                        applicationNo,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddWithdrawalSharepointLinksAsync(string applicationNo, string filename, string sharepointlink) {
            this.AddWithdrawalSharepointLinksAsync(applicationNo, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void AddWithdrawalSharepointLinksAsync(string applicationNo, string filename, string sharepointlink, object userState) {
            if ((this.AddWithdrawalSharepointLinksOperationCompleted == null)) {
                this.AddWithdrawalSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddWithdrawalSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("AddWithdrawalSharepointLinks", new object[] {
                        applicationNo,
                        filename,
                        sharepointlink}, this.AddWithdrawalSharepointLinksOperationCompleted, userState);
        }
        
        private void OnAddWithdrawalSharepointLinksOperationCompleted(object arg) {
            if ((this.AddWithdrawalSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddWithdrawalSharepointLinksCompleted(this, new AddWithdrawalSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:AddDefermentSharepointL" +
            "inks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="AddDefermentSharepointLinks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string AddDefermentSharepointLinks(string applicationNo, string filename, string sharepointlink) {
            object[] results = this.Invoke("AddDefermentSharepointLinks", new object[] {
                        applicationNo,
                        filename,
                        sharepointlink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddDefermentSharepointLinksAsync(string applicationNo, string filename, string sharepointlink) {
            this.AddDefermentSharepointLinksAsync(applicationNo, filename, sharepointlink, null);
        }
        
        /// <remarks/>
        public void AddDefermentSharepointLinksAsync(string applicationNo, string filename, string sharepointlink, object userState) {
            if ((this.AddDefermentSharepointLinksOperationCompleted == null)) {
                this.AddDefermentSharepointLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDefermentSharepointLinksOperationCompleted);
            }
            this.InvokeAsync("AddDefermentSharepointLinks", new object[] {
                        applicationNo,
                        filename,
                        sharepointlink}, this.AddDefermentSharepointLinksOperationCompleted, userState);
        }
        
        private void OnAddDefermentSharepointLinksOperationCompleted(object arg) {
            if ((this.AddDefermentSharepointLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDefermentSharepointLinksCompleted(this, new AddDefermentSharepointLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:PrintReceiptBookin", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="PrintReceiptBookin_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PrintReceiptBookin(string receiptNoFilter) {
            object[] results = this.Invoke("PrintReceiptBookin", new object[] {
                        receiptNoFilter});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PrintReceiptBookinAsync(string receiptNoFilter) {
            this.PrintReceiptBookinAsync(receiptNoFilter, null);
        }
        
        /// <remarks/>
        public void PrintReceiptBookinAsync(string receiptNoFilter, object userState) {
            if ((this.PrintReceiptBookinOperationCompleted == null)) {
                this.PrintReceiptBookinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintReceiptBookinOperationCompleted);
            }
            this.InvokeAsync("PrintReceiptBookin", new object[] {
                        receiptNoFilter}, this.PrintReceiptBookinOperationCompleted, userState);
        }
        
        private void OnPrintReceiptBookinOperationCompleted(object arg) {
            if ((this.PrintReceiptBookinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintReceiptBookinCompleted(this, new PrintReceiptBookinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:PrintReceiptExemption", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="PrintReceiptExemption_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string PrintReceiptExemption(string receiptNoFilter) {
            object[] results = this.Invoke("PrintReceiptExemption", new object[] {
                        receiptNoFilter});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PrintReceiptExemptionAsync(string receiptNoFilter) {
            this.PrintReceiptExemptionAsync(receiptNoFilter, null);
        }
        
        /// <remarks/>
        public void PrintReceiptExemptionAsync(string receiptNoFilter, object userState) {
            if ((this.PrintReceiptExemptionOperationCompleted == null)) {
                this.PrintReceiptExemptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintReceiptExemptionOperationCompleted);
            }
            this.InvokeAsync("PrintReceiptExemption", new object[] {
                        receiptNoFilter}, this.PrintReceiptExemptionOperationCompleted, userState);
        }
        
        private void OnPrintReceiptExemptionOperationCompleted(object arg) {
            if ((this.PrintReceiptExemptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintReceiptExemptionCompleted(this, new PrintReceiptExemptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnGetCustomerPicture", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnGetCustomerPicture_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetCustomerPicture(string custNo) {
            object[] results = this.Invoke("FnGetCustomerPicture", new object[] {
                        custNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetCustomerPictureAsync(string custNo) {
            this.FnGetCustomerPictureAsync(custNo, null);
        }
        
        /// <remarks/>
        public void FnGetCustomerPictureAsync(string custNo, object userState) {
            if ((this.FnGetCustomerPictureOperationCompleted == null)) {
                this.FnGetCustomerPictureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetCustomerPictureOperationCompleted);
            }
            this.InvokeAsync("FnGetCustomerPicture", new object[] {
                        custNo}, this.FnGetCustomerPictureOperationCompleted, userState);
        }
        
        private void OnFnGetCustomerPictureOperationCompleted(object arg) {
            if ((this.FnGetCustomerPictureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetCustomerPictureCompleted(this, new FnGetCustomerPictureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:GetStudentsImages", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="GetStudentsImages_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetStudentsImages(string idNumber) {
            object[] results = this.Invoke("GetStudentsImages", new object[] {
                        idNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStudentsImagesAsync(string idNumber) {
            this.GetStudentsImagesAsync(idNumber, null);
        }
        
        /// <remarks/>
        public void GetStudentsImagesAsync(string idNumber, object userState) {
            if ((this.GetStudentsImagesOperationCompleted == null)) {
                this.GetStudentsImagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStudentsImagesOperationCompleted);
            }
            this.InvokeAsync("GetStudentsImages", new object[] {
                        idNumber}, this.GetStudentsImagesOperationCompleted, userState);
        }
        
        private void OnGetStudentsImagesOperationCompleted(object arg) {
            if ((this.GetStudentsImagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStudentsImagesCompleted(this, new GetStudentsImagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:ResultSlip", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="ResultSlip_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ResultSlip(string studentRegNo, string examSittingId) {
            object[] results = this.Invoke("ResultSlip", new object[] {
                        studentRegNo,
                        examSittingId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ResultSlipAsync(string studentRegNo, string examSittingId) {
            this.ResultSlipAsync(studentRegNo, examSittingId, null);
        }
        
        /// <remarks/>
        public void ResultSlipAsync(string studentRegNo, string examSittingId, object userState) {
            if ((this.ResultSlipOperationCompleted == null)) {
                this.ResultSlipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResultSlipOperationCompleted);
            }
            this.InvokeAsync("ResultSlip", new object[] {
                        studentRegNo,
                        examSittingId}, this.ResultSlipOperationCompleted, userState);
        }
        
        private void OnResultSlipOperationCompleted(object arg) {
            if ((this.ResultSlipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResultSlipCompleted(this, new ResultSlipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnGetExaminationResults" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnGetExaminationResults_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetExaminationResults(string idNumber) {
            object[] results = this.Invoke("FnGetExaminationResults", new object[] {
                        idNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetExaminationResultsAsync(string idNumber) {
            this.FnGetExaminationResultsAsync(idNumber, null);
        }
        
        /// <remarks/>
        public void FnGetExaminationResultsAsync(string idNumber, object userState) {
            if ((this.FnGetExaminationResultsOperationCompleted == null)) {
                this.FnGetExaminationResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetExaminationResultsOperationCompleted);
            }
            this.InvokeAsync("FnGetExaminationResults", new object[] {
                        idNumber}, this.FnGetExaminationResultsOperationCompleted, userState);
        }
        
        private void OnFnGetExaminationResultsOperationCompleted(object arg) {
            if ((this.FnGetExaminationResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetExaminationResultsCompleted(this, new FnGetExaminationResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnGetStudentProcessingH" +
            "eader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnGetStudentProcessingHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetStudentProcessingHeader(string applicationNo, string studentNo, string examId) {
            object[] results = this.Invoke("FnGetStudentProcessingHeader", new object[] {
                        applicationNo,
                        studentNo,
                        examId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetStudentProcessingHeaderAsync(string applicationNo, string studentNo, string examId) {
            this.FnGetStudentProcessingHeaderAsync(applicationNo, studentNo, examId, null);
        }
        
        /// <remarks/>
        public void FnGetStudentProcessingHeaderAsync(string applicationNo, string studentNo, string examId, object userState) {
            if ((this.FnGetStudentProcessingHeaderOperationCompleted == null)) {
                this.FnGetStudentProcessingHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetStudentProcessingHeaderOperationCompleted);
            }
            this.InvokeAsync("FnGetStudentProcessingHeader", new object[] {
                        applicationNo,
                        studentNo,
                        examId}, this.FnGetStudentProcessingHeaderOperationCompleted, userState);
        }
        
        private void OnFnGetStudentProcessingHeaderOperationCompleted(object arg) {
            if ((this.FnGetStudentProcessingHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetStudentProcessingHeaderCompleted(this, new FnGetStudentProcessingHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnGetStudentProcessingH" +
            "eaderReg", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnGetStudentProcessingHeaderReg_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetStudentProcessingHeaderReg(string applicationNo, string idNumber, string examId) {
            object[] results = this.Invoke("FnGetStudentProcessingHeaderReg", new object[] {
                        applicationNo,
                        idNumber,
                        examId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetStudentProcessingHeaderRegAsync(string applicationNo, string idNumber, string examId) {
            this.FnGetStudentProcessingHeaderRegAsync(applicationNo, idNumber, examId, null);
        }
        
        /// <remarks/>
        public void FnGetStudentProcessingHeaderRegAsync(string applicationNo, string idNumber, string examId, object userState) {
            if ((this.FnGetStudentProcessingHeaderRegOperationCompleted == null)) {
                this.FnGetStudentProcessingHeaderRegOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetStudentProcessingHeaderRegOperationCompleted);
            }
            this.InvokeAsync("FnGetStudentProcessingHeaderReg", new object[] {
                        applicationNo,
                        idNumber,
                        examId}, this.FnGetStudentProcessingHeaderRegOperationCompleted, userState);
        }
        
        private void OnFnGetStudentProcessingHeaderRegOperationCompleted(object arg) {
            if ((this.FnGetStudentProcessingHeaderRegCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetStudentProcessingHeaderRegCompleted(this, new FnGetStudentProcessingHeaderRegCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnGetExamBookingEntries" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnGetExamBookingEntries_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetExamBookingEntries(string studentNo, int txtstatus) {
            object[] results = this.Invoke("FnGetExamBookingEntries", new object[] {
                        studentNo,
                        txtstatus});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetExamBookingEntriesAsync(string studentNo, int txtstatus) {
            this.FnGetExamBookingEntriesAsync(studentNo, txtstatus, null);
        }
        
        /// <remarks/>
        public void FnGetExamBookingEntriesAsync(string studentNo, int txtstatus, object userState) {
            if ((this.FnGetExamBookingEntriesOperationCompleted == null)) {
                this.FnGetExamBookingEntriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetExamBookingEntriesOperationCompleted);
            }
            this.InvokeAsync("FnGetExamBookingEntries", new object[] {
                        studentNo,
                        txtstatus}, this.FnGetExamBookingEntriesOperationCompleted, userState);
        }
        
        private void OnFnGetExamBookingEntriesOperationCompleted(object arg) {
            if ((this.FnGetExamBookingEntriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetExamBookingEntriesCompleted(this, new FnGetExamBookingEntriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:FnGetStudentUser", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="FnGetStudentUser_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetStudentUser(string email, string password) {
            object[] results = this.Invoke("FnGetStudentUser", new object[] {
                        email,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetStudentUserAsync(string email, string password) {
            this.FnGetStudentUserAsync(email, password, null);
        }
        
        /// <remarks/>
        public void FnGetStudentUserAsync(string email, string password, object userState) {
            if ((this.FnGetStudentUserOperationCompleted == null)) {
                this.FnGetStudentUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetStudentUserOperationCompleted);
            }
            this.InvokeAsync("FnGetStudentUser", new object[] {
                        email,
                        password}, this.FnGetStudentUserOperationCompleted, userState);
        }
        
        private void OnFnGetStudentUserOperationCompleted(object arg) {
            if ((this.FnGetStudentUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetStudentUserCompleted(this, new FnGetStudentUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentManagement:DeffermentInvoice", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", ResponseElementName="DeffermentInvoice_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentManagement", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeffermentInvoice(string applicationNo) {
            object[] results = this.Invoke("DeffermentInvoice", new object[] {
                        applicationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeffermentInvoiceAsync(string applicationNo) {
            this.DeffermentInvoiceAsync(applicationNo, null);
        }
        
        /// <remarks/>
        public void DeffermentInvoiceAsync(string applicationNo, object userState) {
            if ((this.DeffermentInvoiceOperationCompleted == null)) {
                this.DeffermentInvoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeffermentInvoiceOperationCompleted);
            }
            this.InvokeAsync("DeffermentInvoice", new object[] {
                        applicationNo}, this.DeffermentInvoiceOperationCompleted, userState);
        }
        
        private void OnDeffermentInvoiceOperationCompleted(object arg) {
            if ((this.DeffermentInvoiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeffermentInvoiceCompleted(this, new DeffermentInvoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnRegistrationCompletedEventHandler(object sender, FnRegistrationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRegistrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRegistrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCreateApplicantAccountRequestCompletedEventHandler(object sender, FnCreateApplicantAccountRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateApplicantAccountRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateApplicantAccountRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnResetPasswordCompletedEventHandler(object sender, FnResetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ResetSendEmailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnChangeStudentPasswordCompletedEventHandler(object sender, FnChangeStudentPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnChangeStudentPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnChangeStudentPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnApplicantProfileRegistrationCompletedEventHandler(object sender, FnApplicantProfileRegistrationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnApplicantProfileRegistrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnApplicantProfileRegistrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnExistingStudentCompletedEventHandler(object sender, FnExistingStudentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnExistingStudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnExistingStudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateDeffermentLineCompletedEventHandler(object sender, CreateDeffermentLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateDeffermentLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateDeffermentLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateDeffermentCompletedEventHandler(object sender, CreateDeffermentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateDeffermentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateDeffermentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateWithdrawalLineCompletedEventHandler(object sender, CreateWithdrawalLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateWithdrawalLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateWithdrawalLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateStudentBookingLineCompletedEventHandler(object sender, CreateStudentBookingLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateStudentBookingLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateStudentBookingLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateStudentBookingCompletedEventHandler(object sender, CreateStudentBookingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateStudentBookingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateStudentBookingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InstitutionBookingLineCompletedEventHandler(object sender, InstitutionBookingLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InstitutionBookingLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InstitutionBookingLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnRegistrationStudentCompletedEventHandler(object sender, FnRegistrationStudentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRegistrationStudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRegistrationStudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnUploadProfilePhotoCompletedEventHandler(object sender, FnUploadProfilePhotoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUploadProfilePhotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUploadProfilePhotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PrintInvoiceCompletedEventHandler(object sender, PrintInvoiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintInvoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintInvoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ConfirmPaymentsStudentCompletedEventHandler(object sender, ConfirmPaymentsStudentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmPaymentsStudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmPaymentsStudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PrintReceiptCompletedEventHandler(object sender, PrintReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PrintDeffermentSummeryCompletedEventHandler(object sender, PrintDeffermentSummeryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintDeffermentSummeryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintDeffermentSummeryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PrintInvoiceExemptionCompletedEventHandler(object sender, PrintInvoiceExemptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintInvoiceExemptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintInvoiceExemptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ConfirmPaymentStudentRegistrationCompletedEventHandler(object sender, ConfirmPaymentStudentRegistrationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmPaymentStudentRegistrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmPaymentStudentRegistrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ConfirmPaymentsStudentBookingCompletedEventHandler(object sender, ConfirmPaymentsStudentBookingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmPaymentsStudentBookingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmPaymentsStudentBookingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PrintInvoiceBookingCompletedEventHandler(object sender, PrintInvoiceBookingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintInvoiceBookingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintInvoiceBookingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnApplicantProfileRegistrationLinesCompletedEventHandler(object sender, FnApplicantProfileRegistrationLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnApplicantProfileRegistrationLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnApplicantProfileRegistrationLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PrintInvoiceInstRegCompletedEventHandler(object sender, PrintInvoiceInstRegCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintInvoiceInstRegCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintInvoiceInstRegCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PrintWithdrawalSummeryCompletedEventHandler(object sender, PrintWithdrawalSummeryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintWithdrawalSummeryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintWithdrawalSummeryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInstitutionStudentRegistrationCompletedEventHandler(object sender, FnInstitutionStudentRegistrationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInstitutionStudentRegistrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInstitutionStudentRegistrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InstitutionRegistartionHeaderCompletedEventHandler(object sender, InstitutionRegistartionHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InstitutionRegistartionHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InstitutionRegistartionHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InstitutionExamBookingCompletedEventHandler(object sender, InstitutionExamBookingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InstitutionExamBookingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InstitutionExamBookingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateExemptionLineCompletedEventHandler(object sender, CreateExemptionLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateExemptionLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateExemptionLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateExemptionCompletedEventHandler(object sender, CreateExemptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateExemptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateExemptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateWithdrawalCompletedEventHandler(object sender, CreateWithdrawalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateWithdrawalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateWithdrawalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertMultipleSurveysCompletedEventHandler(object sender, FnInsertMultipleSurveysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertMultipleSurveysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertMultipleSurveysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertBranchingResponsesCompletedEventHandler(object sender, FnInsertBranchingResponsesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertBranchingResponsesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertBranchingResponsesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitSurveyCompletedEventHandler(object sender, FnSubmitSurveyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitSurveyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitSurveyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCreateBRResponseQuestionsCompletedEventHandler(object sender, FnCreateBRResponseQuestionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateBRResponseQuestionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateBRResponseQuestionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateRenewalCompletedEventHandler(object sender, CreateRenewalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateRenewalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateRenewalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateReactivationCompletedEventHandler(object sender, CreateReactivationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateReactivationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateReactivationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateRenewalLineCompletedEventHandler(object sender, CreateRenewalLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateRenewalLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateRenewalLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateReactivationLineCompletedEventHandler(object sender, CreateReactivationLineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateReactivationLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateReactivationLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnAddDisabilityCompletedEventHandler(object sender, FnAddDisabilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddDisabilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddDisabilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GenerateTimetableCompletedEventHandler(object sender, GenerateTimetableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateTimetableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateTimetableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitApplicationCompletedEventHandler(object sender, FnSubmitApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void StudentTimetableCompletedEventHandler(object sender, StudentTimetableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StudentTimetableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StudentTimetableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InvoiceCompletedEventHandler(object sender, InvoiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InvoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InvoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddRegistrationSharepointLinksCompletedEventHandler(object sender, AddRegistrationSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddRegistrationSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddRegistrationSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnConfirmPaymentCompletedEventHandler(object sender, FnConfirmPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnConfirmPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnConfirmPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateExemptionQualificationsCompletedEventHandler(object sender, CreateExemptionQualificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateExemptionQualificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateExemptionQualificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ExemptionLetterCompletedEventHandler(object sender, ExemptionLetterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExemptionLetterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExemptionLetterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnSubmitExeptionApplicationCompletedEventHandler(object sender, FnSubmitExeptionApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitExeptionApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitExeptionApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EditRegistrationApplicationCompletedEventHandler(object sender, EditRegistrationApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditRegistrationApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditRegistrationApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnConfirmAttendanceCompletedEventHandler(object sender, FnConfirmAttendanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnConfirmAttendanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnConfirmAttendanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnApplyJobCompletedEventHandler(object sender, FnApplyJobCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnApplyJobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnApplyJobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddExemptionSharepointLinksCompletedEventHandler(object sender, AddExemptionSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddExemptionSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddExemptionSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnInsertBookingLinesCompletedEventHandler(object sender, FnInsertBookingLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertBookingLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertBookingLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveExaminationPaperCompletedEventHandler(object sender, RemoveExaminationPaperCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveExaminationPaperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveExaminationPaperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnConfirmExamCenterCompletedEventHandler(object sender, FnConfirmExamCenterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnConfirmExamCenterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnConfirmExamCenterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnConfirmBookingPaymentCompletedEventHandler(object sender, FnConfirmBookingPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnConfirmBookingPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnConfirmBookingPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddVacancySharepointLinksCompletedEventHandler(object sender, AddVacancySharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddVacancySharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddVacancySharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void BookingInvoiceCompletedEventHandler(object sender, BookingInvoiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BookingInvoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BookingInvoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCaseManagementCompletedEventHandler(object sender, FnCaseManagementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCaseManagementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCaseManagementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnCenterRecollocateCompletedEventHandler(object sender, FnCenterRecollocateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCenterRecollocateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCenterRecollocateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnEditProfileCompletedEventHandler(object sender, FnEditProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEditProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEditProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnEditstudentEMAILCompletedEventHandler(object sender, FnEditstudentEMAILCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEditstudentEMAILCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEditstudentEMAILCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnEditstudentCompletedEventHandler(object sender, FnEditstudentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEditstudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEditstudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnUploadProfilePhotoprofileCompletedEventHandler(object sender, FnUploadProfilePhotoprofileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUploadProfilePhotoprofileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUploadProfilePhotoprofileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnDisplayPapersCompletedEventHandler(object sender, FnDisplayPapersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDisplayPapersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDisplayPapersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveExemptionPaperCompletedEventHandler(object sender, RemoveExemptionPaperCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveExemptionPaperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveExemptionPaperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveQualificationPaperCompletedEventHandler(object sender, RemoveQualificationPaperCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveQualificationPaperCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveQualificationPaperCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnConfirmPaymentsCompletedEventHandler(object sender, FnConfirmPaymentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnConfirmPaymentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnConfirmPaymentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnsuggestPapersCompletedEventHandler(object sender, FnsuggestPapersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnsuggestPapersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnsuggestPapersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RenewalInvoiceCompletedEventHandler(object sender, RenewalInvoiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RenewalInvoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RenewalInvoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddWithdrawalSharepointLinksCompletedEventHandler(object sender, AddWithdrawalSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddWithdrawalSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddWithdrawalSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddDefermentSharepointLinksCompletedEventHandler(object sender, AddDefermentSharepointLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDefermentSharepointLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDefermentSharepointLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PrintReceiptBookinCompletedEventHandler(object sender, PrintReceiptBookinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintReceiptBookinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintReceiptBookinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void PrintReceiptExemptionCompletedEventHandler(object sender, PrintReceiptExemptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintReceiptExemptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintReceiptExemptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetCustomerPictureCompletedEventHandler(object sender, FnGetCustomerPictureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetCustomerPictureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetCustomerPictureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetStudentsImagesCompletedEventHandler(object sender, GetStudentsImagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStudentsImagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStudentsImagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ResultSlipCompletedEventHandler(object sender, ResultSlipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResultSlipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResultSlipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetExaminationResultsCompletedEventHandler(object sender, FnGetExaminationResultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetExaminationResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetExaminationResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetStudentProcessingHeaderCompletedEventHandler(object sender, FnGetStudentProcessingHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetStudentProcessingHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetStudentProcessingHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetStudentProcessingHeaderRegCompletedEventHandler(object sender, FnGetStudentProcessingHeaderRegCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetStudentProcessingHeaderRegCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetStudentProcessingHeaderRegCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetExamBookingEntriesCompletedEventHandler(object sender, FnGetExamBookingEntriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetExamBookingEntriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetExamBookingEntriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FnGetStudentUserCompletedEventHandler(object sender, FnGetStudentUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetStudentUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetStudentUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeffermentInvoiceCompletedEventHandler(object sender, DeffermentInvoiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeffermentInvoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeffermentInvoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591